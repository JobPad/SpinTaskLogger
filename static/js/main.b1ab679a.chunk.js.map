{"version":3,"sources":["components/accordian/commissioning.jpg","logo.svg","components/log/commissioning.jpg","components/appbar/appbar.jsx","components/inputform/logform.jsx","components/modal/inputFormModal.jsx","components/log/LogItem.js","components/log/LogList.js","components/card/cardItem.js","components/card/cardList.js","components/Pages/CompanyList.js","components/Pages/RolesList.js","components/Pages/PersonsList.js","components/tasks/taskDetails.js","components/CustomHooks/useHandleCheckBox.js","components/Context/CentralDataContext.js","components/Header/Header.js","components/Context/ProjectContext.js","components/modal/ProjectModal.js","components/CustomHooks/useCommonState.js","components/project/project.js","components/tasks/taskCard.js","components/modal/TasksModal.js","components/tasks/tasks.js","components/Pages/ListItems.js","components/Pages/ListContainer.js","components/modal/DataModal.js","components/modal/PersonDataModal.js","components/modal/TeamModal.js","components/Pages/Company.js","components/Recent/Recent.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","__webpack_require__","p","pages","settings","ResponsiveAppBar","_React$useState","React","_React$useState2","Object","slicedToArray","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","navigate","useNavigate","handleCloseNavMenu","handleCloseUserMenu","handleNav","page","console","log","react","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","href","sx","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","a","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","MenuItem","key","toLocaleLowerCase","textAlign","Adb_default","Button","my","Tooltip","title","Avatar","alt","src","mt","setting","LogForm","_ref","logValue","handleChange","react_default","createElement","FormControl","m","minWidth","TextField","label","onChange","e","target","name","value","placeholder","multiline","maxRows","type","InputFormModal","formType","closing","edit","handleAdd","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","buttonText","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","className","DialogActions","LogItem","handleChecked","checked","labelid","handleEditOption","ListItem","backgroundColor","alignItems","ListItemButton","disableRipple","paddingLeft","paddingRight","indexOf","tabIndex","inputProps","dense","ListItemIcon","Checkbox","edge","ListItemAvatar","ListItemText","primary","comments","secondary","date","username","workingTime","components_Menu","menuButton","MoreHoriz_default","menuClassName","transition","components_MenuItem","LogList","logs","useParams","_useState","useState","_useState2","setOpen","_useState3","_useState4","setDisplay","setChecked","_useState5","_useState6","setEdit","_useState7","_useState8","setLogs","setLogValue","handleEditSelected","handleToggle","currentIndex","newChecked","toConsumableArray","push","splice","length","Add_default","forEach","check","previosLogs","filter","Delete_default","alignSelf","List","width","bgcolor","padding","labelId","concat","Divider","borderColor","borderBottomWidth","logform","prevState","objectSpread","defineProperty","initialState","ProjectCard","projectInfo","handleShowEdit","handleDel","handleFav","isFavourite","StarOutlined_default","StarBorderOutlined_default","Card","style","maxHeight","cursor","border","borderRadius","Body","Title","projectName","Subtitle","projectNum","projectDescription","Text","startDate","endDate","cardList","bgColor","empid","empname","end","managername","resourceId","start","taskdesc","taskid","memberCount","CompanyList","IdCompany","CompanyName","RolesList","roleName","PersonsList","firstName","lastName","emailAdd","phoneNum","company","taskDetails","enddate","projectdesc","projectid","startdate","useHandleCheckBox","handleCheck","CentralDataContext","createContext","CentralDataProvider","props","data","setData","setPage","displayCheck","setDisplayCheck","delActive","setDelActive","_useState9","_useState10","action","setAction","_useState11","_useState12","setFavouristeList","_useHandleCheckBox","pathname","useLocation","_useState13","_useState14","team","setTeam","useRef","useEffect","split","pageName","toUpperCase","slice","dataToLoad","ProjectData","proj","createTeam","newTeam","Math","floor","random","projectId","teamName","teamDescription","members","memberName","role","prev","Provider","d","undefined","find","toLowerCase","word","charAt","join","alert","preventDefault","handleEdit","obj","index","findIndex","handleFavProj","children","useStyles","makeStyles","buttonicon","Header","handleShow","classes","useContext","isTaskPage","includes","fontSize","margin","ProjectContext","ProjectProvider","_useContext","handleAddProject","handleDelProject","project","handleEditProject","ProjectModal","show","handleClose","Id","formData","setFormData","_useContext2","prevFormData","handleClosing","Fragment","esm_Modal","onHide","animation","centered","closeButton","Form","Group","controlId","Label","Control","Footer","useCommonState","setShow","setId","gridContainer","gridItem","height","Project","_useCommonState","projectitems","Grid","item","s","lg","container","modal_ProjectModal","TaskCard","tasksInfo","status","setStatus","setIsFavourite","star","MenuButton","onItemClick","index_esm","Edit_default","marginRight","index_modern","avatars","initialCharacters","max","displayAllOnHover","shadow","TasksModal","taskName","taskDescription","requestedBy","assignedTo","handleSelectChange","task","react_select_esm","entry","Task","temp","matches","TasksList","t","spacing","modal_TasksModal","ListItems","listItems","Items","_ref2","_ref3","_ref4","lname","_ref5","sort","b","localeCompare","gap","marginTop","assign","parseInt","stringAvatar","ListContainer","Pages_ListItems","DataModal","setName","pageTitle","formName","person","PersonName","handleEditName","PersonDataModal","companyOptions","c","min","options","TeamModal","count","setCount","removeMember","roleOptions","r","teamSelected","membersElement","Clear_default","arr","i","processMemberElement","Company","Modal","modal_DataModal","modal_TeamModal","modal_PersonDataModal","Pages_ListContainer","Recent","App","appbar","dist","path","element","Context_CentralDataContext","Pages_Company","Context_ProjectContext","components_Recent_Recent","Status","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","createRoot","document","getElementById","render","react_router_dom_dist","src_App","URL","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b1ab679a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/commissioning.b65975e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/commissioning.b65975e9.jpg\";","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport AdbIcon from \"@mui/icons-material/Adb\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  \"Favourites\",\r\n  \"Company\",\r\n  \"Roles\",\r\n  \"Person\",\r\n  \"Project\",\r\n  \"Team\",\r\n  \"Task\",\r\n  \"Log\",\r\n];\r\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\r\n\r\nconst ResponsiveAppBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleNav = (page) => {\r\n    console.log(\"/\" + page);\r\n    handleCloseNavMenu();\r\n    navigate(\"/\" + page);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"false\">\r\n        <Toolbar disableGutters>\r\n          {/* <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} /> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"none\", md: \"flex\" },\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            SPIN AU\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem\r\n                  key={page}\r\n                  onClick={() => handleNav(page.toLocaleLowerCase())}\r\n                >\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: \"flex\", md: \"none\" },\r\n              flexGrow: 1,\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            SPIN\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={() => handleNav(page.toLocaleLowerCase())}\r\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default ResponsiveAppBar;\r\n","import React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nconst LogForm = ({ logValue, handleChange }) => {\r\n  /*console.log(initialState)*/\r\n  /*\r\n    const [logValue , setLogValue] = React.useState(initialState)\r\n\r\n\r\n    const handleChange = (event) =>\r\n    {\r\n        setLogValue((prevState)=> ({...prevState,[event.target.label]:event.target.value}))\r\n    }*/\r\n\r\n  return (\r\n    <div>\r\n      {/*<div>\r\n    <FormControl variant=\"standard\" sx={{ m:1, minWidth:9/10}}>\r\n        <InputLabel id=\"demo-simple-select-standard-label\">Task</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-standard-label\"\r\n          id=\"demo-simple-select-standard\"\r\n          onChange={(e)=>handleChange(e.target.name,e.target.value)}\r\n          label=\"Age\"\r\n          name=\"task_id\"\r\n        >\r\n          <MenuItem value={10}>Task1</MenuItem>\r\n          <MenuItem value={20}>Task2</MenuItem>\r\n          <MenuItem value={30}>Task3</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n</div>*/}\r\n      <div>\r\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            label=\"Date (DD-MM-YYYY)\"\r\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n            name=\"date\"\r\n            placeholder=\"DD-MM-YYYY\"\r\n            variant=\"standard\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n            label=\"Time Taken (HH:MM)\"\r\n            name=\"workingTime\"\r\n            placeholder=\"HH:MM\"\r\n            variant=\"standard\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div>\r\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\r\n          <TextField\r\n            id=\"filled-multiline-flexible\"\r\n            label=\"Comment\"\r\n            name=\"comments\"\r\n            multiline\r\n            maxRows={4}\r\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\r\n            variant=\"filled\"\r\n          />\r\n        </FormControl>\r\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\r\n          <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogForm;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport \"./inputFormModal.css\";\r\n\r\nexport default function InputFormModal({\r\n  formType,\r\n  open,\r\n  closing,\r\n  edit,\r\n  handleAdd,\r\n}) {\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  let buttonText = edit ? \"Submit Changes\" : \"Submit\";\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        fullScreen={fullScreen}\r\n        onClose={closing}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle>Add a new log</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className=\"modalDialogueBig\">\r\n            Fill in the log details\r\n          </DialogContentText>\r\n          {formType}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closing}>Cancel</Button>\r\n          <Button onClick={handleAdd}>{buttonText}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AlertBox from \"../alert/alertBox\";\r\nimport commissioning from \"./commissioning.jpg\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport \"./tasklog.css\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nexport default function LogItem({\r\n  log,\r\n  handleChecked,\r\n  checked,\r\n  labelid,\r\n  handleEditOption,\r\n}) {\r\n  return (\r\n    <ListItem sx={{ backgroundColor: \"#e6f0ff\" }} alignItems=\"flex-start\">\r\n      <ListItemButton\r\n        disableRipple\r\n        sx={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}\r\n        onClick={handleChecked(log.key)}\r\n        checked={checked.indexOf(log.key) !== -1}\r\n        tabIndex={-1}\r\n        inputProps={{ \"aria-labelledby\": labelid }}\r\n        dense\r\n      >\r\n        <ListItemIcon sx={{ minWidth: \"0px\" }}>\r\n          <Checkbox edge=\"start\" disableRipple />\r\n        </ListItemIcon>\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={<Typography fontWeight=\"600\">{log.comments}</Typography>}\r\n          secondary={\r\n            <React.Fragment>\r\n              <Typography variant=\"body2\">{log.date}</Typography>\r\n              <Typography\r\n                sx={{ display: \"inline\" }}\r\n                component=\"span\"\r\n                variant=\"body3\"\r\n                color=\"text.primary\"\r\n              >\r\n                {log.username + \" - \" + log.workingTime}\r\n              </Typography>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </ListItemButton>\r\n      <Menu\r\n        menuButton={\r\n          <IconButton className=\"delete-button\" edge=\"end\" aria-label=\"delete\">\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        }\r\n        menuClassName=\"my-menu\"\r\n        transition\r\n      >\r\n        <MenuItem value=\"Edit\" onClick={handleEditOption}>\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem value=\"More-details\">More Details</MenuItem>\r\n      </Menu>\r\n    </ListItem>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport LogItem from \"./LogItem\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport \"./tasklog.css\";\r\nimport { useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport InputFormModal from \"../modal/inputFormModal\";\r\nimport LogForm from \"../inputform/logform\";\r\n\r\nexport default function LogList({ logs }) {\r\n  const { id } = useParams();\r\n  const [open, setOpen] = useState(false);\r\n  const [display, setDisplay] = useState(\"none\");\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [log, setLogs] = useState([]);\r\n  const [logValue, setLogValue] = React.useState({});\r\n\r\n  const handleChange = (label, value) => {\r\n    console.log(label, value);\r\n    setLogValue((prevState) => ({\r\n      ...prevState,\r\n      username: \"Vishnu\",\r\n      key: log.length,\r\n      [label]: value,\r\n    }));\r\n  };\r\n\r\n  const handleAddLog = () => {\r\n    setLogs([...log, logValue]);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEditSelected = () => {\r\n    setOpen(true);\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleToggle = (value) => () => {\r\n    console.log(\"heyy:\", value);\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    if (newChecked.length > 0) {\r\n      setDisplay(\"flex\");\r\n    } else {\r\n      setDisplay(\"none\");\r\n    }\r\n    console.log(newChecked);\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(\"deleting...\");\r\n\r\n    checked.forEach((check) => {\r\n      setLogs((previosLogs) =>\r\n        previosLogs.filter((log) => {\r\n          console.log(\"log:\", log.key);\r\n          console.log(\"check:\", check);\r\n          return log.key !== check;\r\n        })\r\n      );\r\n    });\r\n\r\n    setDisplay(\"none\");\r\n    setChecked([]);\r\n  };\r\n\r\n  const onClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClosing = () => {\r\n    setOpen(false);\r\n    setEdit(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"project-bar\">\r\n        Task Title {id}\r\n        <div className=\"icons\">\r\n          <IconButton\r\n            onClick={onClick}\r\n            className=\"delete-button\"\r\n            size=\"small\"\r\n            aria-label=\"add\"\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{ display: { display } }}\r\n            className=\"delete-button\"\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n            onClick={handleDelete}\r\n          >\r\n            <DeleteIcon sx={{ alignSelf: \"center\" }} />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <List sx={{ width: \"100%\", bgcolor: \"background.paper\", padding: \"0px\" }}>\r\n        {log.map((log) => {\r\n          const labelId = `checkbox-list-label-${log.key}`;\r\n          return (\r\n            <div>\r\n              <LogItem\r\n                handleChecked={handleToggle}\r\n                key={log.key}\r\n                log={log}\r\n                labelid={labelId}\r\n                checked={checked}\r\n                handleEditOption={handleEditSelected}\r\n              ></LogItem>\r\n              <Divider\r\n                variant=\"inset\"\r\n                sx={{ borderColor: \"white\", borderBottomWidth: \"medium\" }}\r\n                component=\"li\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </List>\r\n\r\n      <InputFormModal\r\n        formType={\r\n          <LogForm\r\n            handleChange={handleChange}\r\n            logValue={logValue}\r\n            initialState={{}}\r\n          ></LogForm>\r\n        }\r\n        open={open}\r\n        closing={handleClosing}\r\n        edit={edit}\r\n        handleAdd={handleAddLog}\r\n      ></InputFormModal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./cardItem.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport useContext from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\r\nimport StarOutlinedIcon from \"@mui/icons-material/StarOutlined\";\r\n\r\nexport default function ProjectCard({\r\n  projectInfo,\r\n  onClick,\r\n  id,\r\n  handleShowEdit,\r\n  handleDel,\r\n  handleFav,\r\n}) {\r\n  const [isFavourite, setIsFavourite] = useState(false);\r\n\r\n  const handleFavouriteProj = (id) => {\r\n    setIsFavourite((prev) => !prev);\r\n    handleFav(id);\r\n  };\r\n\r\n  let star = isFavourite ? <StarOutlinedIcon /> : <StarBorderOutlinedIcon />;\r\n  return (\r\n    <div>\r\n      <Card\r\n        style={{\r\n          maxHeight: \"250px\",\r\n          cursor: \"pointer\",\r\n          border: \"none\",\r\n          borderRadius: \"15px\",\r\n        }}\r\n        className=\"card-temp\"\r\n      >\r\n        <Card.Body className=\"card-body-temp\">\r\n          <Card.Title className=\"title\">\r\n            {projectInfo.projectName}\r\n            {/* <div className=\"icons-container-project\">\r\n              <IconButton\r\n                onClick={() => handleShowEdit(id)}\r\n                size=\"small\"\r\n                aria-label=\"add\"\r\n              >\r\n                <EditIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => handleDel(id)}\r\n                size=\"small\"\r\n                aria-label=\"delete\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton onClick={() => handleFavouriteProj(id)} size=\"small\">\r\n                {star}\r\n              </IconButton>\r\n      </div>*/}\r\n          </Card.Title>\r\n          <div className=\"card-main-container\" onClick={() => onClick(id)}>\r\n            <Card.Subtitle className=\"mb-3 mt-3\">\r\n              {projectInfo.projectNum}\r\n            </Card.Subtitle>\r\n            <div className=\"description\">{projectInfo.projectDescription}</div>\r\n            <div className=\"dates-container\">\r\n              <Card.Text className=\"links\">\r\n                Start Date:{\" \"}\r\n                <span className=\"date\">{projectInfo.startDate}</span>\r\n              </Card.Text>\r\n              <Card.Text className=\"links\">\r\n                End Date: <span className=\"date\">{projectInfo.endDate}</span>\r\n              </Card.Text>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","export default [\r\n  {\r\n    key: 1,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-12-30 17:30:00\",\r\n    endDate: \"2022-12-30\",\r\n    id: 47,\r\n    managername: \"Josep Maria Net\",\r\n    projectDescription: \"I4.0 - InfluxDB\",\r\n    projectNum: \"0306\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startDate: \"2022-07-01\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    projectName: \"0306-I4.0 - InfluxDB\",\r\n    isFavourite: true,\r\n    memberCount: 5,\r\n  },\r\n  /*{\r\n    key: 2,\r\n    bgColor: \"#ffa700\",\r\n    comments: \"\",\r\n    empid: \"229\",\r\n    empname: \"Srirengarajan Kamarajan\",\r\n    end: \"2022-10-22 17:30:00\",\r\n    enddate: \"22-10-2022\",\r\n    id: 55,\r\n    managername: \"Srirengarajan Kamarajan\",\r\n    projectdesc: \"Western Controls - Water Corporation : Royal St SPS\",\r\n    projectid: \"4130\",\r\n    resourceId: \"229\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Project Management\",\r\n    taskid: \"PM\",\r\n    title: \"4130-Western Controls - Water Corporation : Royal St SPS\",\r\n  },\r\n  {\r\n    key: 3,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"224\",\r\n    empname: \"Peter Ling\",\r\n    end: \"2022-08-19 17:30:00\",\r\n    enddate: \"19-08-2022\",\r\n    id: 35,\r\n    managername: \"Sonia Barea Castillo\",\r\n    projectdesc: \"Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\r\n    projectid: \"4123\",\r\n    resourceId: \"224\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"4123-Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\r\n  },\r\n  {\r\n    key: 4,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-09-02 17:30:00\",\r\n    enddate: \"02-09-2022\",\r\n    id: 49,\r\n    managername: \"Josep Maria Net\",\r\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\r\n    projectid: \"3153\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"3153-Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\r\n  },\r\n  {\r\n    key: 5,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-08-12 17:30:00\",\r\n    enddate: \"12-08-2022\",\r\n    id: 48,\r\n    managername: \"Josep Maria Net\",\r\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\r\n    projectid: \"3146\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"3146-Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\r\n  },*/\r\n];\r\n","export default [\r\n  {\r\n    IdCompany: 1,\r\n    CompanyName: \"Google\",\r\n  },\r\n  {\r\n    IdCompany: 2,\r\n    CompanyName: \"Facebook\",\r\n  },\r\n  {\r\n    IdCompany: 3,\r\n    CompanyName: \"Water Cop\",\r\n  },\r\n  {\r\n    IdCompany: 4,\r\n    CompanyName: \"Rio Tinto\",\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    id: 1,\r\n    roleName: \"Engineer\",\r\n  },\r\n  {\r\n    id: 2,\r\n    roleName: \"Soft Dev\",\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    id: 1,\r\n    firstName: \"John\",\r\n    lastName: \"Madden\",\r\n    emailAdd: \"cde@gmail.com\",\r\n    phoneNum: \"+610424203587\",\r\n    company: { value: \"meta\", label: \"meta\" },\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: \"Michael\",\r\n    lastName: \"Tran\",\r\n    emailAdd: \"abc@gmail.com\",\r\n    phoneNum: \"+610424203584\",\r\n    company: { value: \"water cop\", label: \"water cop\" },\r\n  },\r\n];\r\n","export default [\r\n  {\r\n    key: 1,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-12-30 17:30:00\",\r\n    enddate: \"30-12-2022\",\r\n    id: 47,\r\n    managername: \"Josep Maria Net\",\r\n    projectdesc: \"I4.0 - InfluxDB\",\r\n    projectid: \"0306\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"0306-I4.0 - InfluxDB\",\r\n  },\r\n  {\r\n    key: 2,\r\n    bgColor: \"#ffa700\",\r\n    comments: \"\",\r\n    empid: \"229\",\r\n    empname: \"Srirengarajan Kamarajan\",\r\n    end: \"2022-10-22 17:30:00\",\r\n    enddate: \"22-10-2022\",\r\n    id: 55,\r\n    managername: \"Srirengarajan Kamarajan\",\r\n    projectdesc: \"Western Controls - Water Corporation : Royal St SPS\",\r\n    projectid: \"4130\",\r\n    resourceId: \"229\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Project Management\",\r\n    taskid: \"PM\",\r\n    title: \"4130-Western Controls - Water Corporation : Royal St SPS\",\r\n  },\r\n  {\r\n    key: 3,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"224\",\r\n    empname: \"Peter Ling\",\r\n    end: \"2022-08-19 17:30:00\",\r\n    enddate: \"19-08-2022\",\r\n    id: 35,\r\n    managername: \"Sonia Barea Castillo\",\r\n    projectdesc: \"Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\r\n    projectid: \"4123\",\r\n    resourceId: \"224\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"4123-Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\r\n  },\r\n  {\r\n    key: 4,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-09-02 17:30:00\",\r\n    enddate: \"02-09-2022\",\r\n    id: 49,\r\n    managername: \"Josep Maria Net\",\r\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\r\n    projectid: \"3153\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"3153-Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\r\n  },\r\n  {\r\n    key: 5,\r\n    bgColor: \"#0057e7\",\r\n    comments: \"\",\r\n    empid: \"46219\",\r\n    empname: \"Vishnu Vijayakumar\",\r\n    end: \"2022-08-12 17:30:00\",\r\n    enddate: \"12-08-2022\",\r\n    id: 48,\r\n    managername: \"Josep Maria Net\",\r\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\r\n    projectid: \"3146\",\r\n    resourceId: \"46219\",\r\n    start: \"2022-07-01 08:30:00\",\r\n    startdate: \"01-07-2022\",\r\n    taskdesc: \"Engineering\",\r\n    taskid: \"ENG\",\r\n    title: \"3146-Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\n\r\nconst useHandleCheckBox = () => {\r\n  const [checked, setChecked] = useState([]);\r\n  const handleCheck = (value) => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    console.log(newChecked);\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  return { checked, setChecked, handleCheck };\r\n};\r\nexport default useHandleCheckBox;\r\n","import React, {\r\n  createContext,\r\n  useContext,\r\n  useParams,\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n} from \"react\";\r\nimport CompanyList from \"../Pages/CompanyList\";\r\nimport RolesList from \"../Pages/RolesList\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PersonsList from \"../Pages/PersonsList\";\r\nimport taskDetails from \"../tasks/taskDetails\";\r\nimport useHandleCheckBox from \"../CustomHooks/useHandleCheckBox\";\r\nimport ProjectData from \"../card/cardList\";\r\n\r\nexport const CentralDataContext = createContext();\r\n\r\nconst CentralDataProvider = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [page, setPage] = useState(\"\");\r\n  const [displayCheck, setDisplayCheck] = useState(\"none\");\r\n  const [delActive, setDelActive] = useState(false);\r\n  const [action, setAction] = useState(\"Add\");\r\n  const [favouriteList, setFavouristeList] = useState([]);\r\n  const { checked, setChecked, handleCheck } = useHandleCheckBox();\r\n  const { pathname } = useLocation();\r\n  const [team, setTeam] = useState([]);\r\n\r\n  const isRender = useRef(true);\r\n  useEffect(() => {\r\n    console.log(\"URL params:\", pathname.split(\"/\")[1]);\r\n    let pageName =\r\n      pathname.split(\"/\")[1][0].toUpperCase() + pathname.split(\"/\")[1].slice(1);\r\n    let dataToLoad =\r\n      pageName.toLocaleLowerCase() === \"company\"\r\n        ? CompanyList\r\n        : pageName.toLocaleLowerCase() === \"roles\"\r\n        ? RolesList\r\n        : pageName.toLocaleLowerCase() === \"task\"\r\n        ? taskDetails\r\n        : pageName.toLocaleLowerCase() === \"project\"\r\n        ? ProjectData\r\n        : pageName.toLocaleLowerCase() === \"team\"\r\n        ? team\r\n        : PersonsList;\r\n\r\n    if (\r\n      (pageName.toLocaleLowerCase() === \"project\" ||\r\n        pageName.toLocaleLowerCase() === \"team\") &&\r\n      ProjectData.length !== 0\r\n    ) {\r\n      ProjectData.forEach((proj) => {\r\n        console.log(\"in here\");\r\n        createTeam(proj.projectNum);\r\n      });\r\n    } else {\r\n      setTeam([]);\r\n      //setData(dataToLoad);\r\n    }\r\n    setData(dataToLoad);\r\n    setPage(pageName);\r\n    //console.log(\"in central context\");\r\n  }, [pathname]);\r\n\r\n  console.log(\"teams:\", team);\r\n\r\n  const createTeam = (projectNum) => {\r\n    let newTeam = {\r\n      id: Math.floor(Math.random() * 100),\r\n      projectId: projectNum,\r\n      teamName: `team ${projectNum}`,\r\n      teamDescription: \"initial team\",\r\n      members: [\r\n        {\r\n          memberName: \"john\",\r\n          role: \"\",\r\n        },\r\n        {\r\n          memberName: \"mary\",\r\n          role: \"\",\r\n        },\r\n        /* {\r\n          memberName: \"axel\",\r\n          role: \"\",\r\n        },\r\n        {\r\n          memberName: \"steven\",\r\n          role: \"\",\r\n        },\r\n        {\r\n          memberName: \"vicky\",\r\n          role: \"\",\r\n        },*/\r\n      ],\r\n    };\r\n    setTeam((prev) => [...prev, newTeam]);\r\n  };\r\n\r\n  const handleFavProj = (id) => {\r\n    let proj = data.find((proj) => proj.projectNum === id);\r\n    setFavouristeList((prev) => [...prev, proj]);\r\n  };\r\n\r\n  const handleDel = () => {\r\n    if (!delActive) {\r\n      setDisplayCheck(\"flex\");\r\n      setDelActive(true);\r\n    } else {\r\n      if (checked.length > 0) {\r\n        console.log(\"handledel:\", page);\r\n        checked.forEach((check) => {\r\n          if (page.toLocaleLowerCase() === \"company\") {\r\n            setData((data) =>\r\n              data.filter((d) => {\r\n                return d.IdCompany !== check;\r\n              })\r\n            );\r\n          } else if (page.toLocaleLowerCase() === \"roles\") {\r\n            setData((data) =>\r\n              data.filter((d) => {\r\n                return d.id !== check;\r\n              })\r\n            );\r\n          } else if (page.toLocaleLowerCase() === \"person\") {\r\n            setData((data) =>\r\n              data.filter((d) => {\r\n                return d.id !== check;\r\n              })\r\n            );\r\n          }\r\n        });\r\n\r\n        setDisplayCheck(\"none\");\r\n        setDelActive((prev) => !prev);\r\n        setChecked([]);\r\n      } else {\r\n        setDisplayCheck(\"none\");\r\n        setDelActive((prev) => !prev);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAdd = (event, value) => {\r\n    console.log(\"adding\");\r\n    switch (page.toLocaleLowerCase()) {\r\n      case \"company\":\r\n        if (\r\n          data.find(\r\n            (d) =>\r\n              d.CompanyName.toLocaleLowerCase() === value.toLocaleLowerCase()\r\n          ) === undefined\r\n        ) {\r\n          setData((prev) => [\r\n            ...prev,\r\n            {\r\n              IdCompany: Math.floor(Math.random() * 100),\r\n              CompanyName: value\r\n                .toLowerCase()\r\n                .split(\" \")\r\n                .map((word) => {\r\n                  return word.charAt(0).toUpperCase() + word.slice(1);\r\n                })\r\n                .join(\" \"),\r\n            },\r\n          ]);\r\n        } else {\r\n          alert(\"company already exist\");\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case \"roles\":\r\n        if (\r\n          data.find(\r\n            (d) => d.roleName.toLocaleLowerCase() === value.toLocaleLowerCase()\r\n          ) === undefined\r\n        ) {\r\n          setData((prev) => [\r\n            ...prev,\r\n            {\r\n              id: Math.floor(Math.random() * 100),\r\n              roleName: value\r\n                .toLowerCase()\r\n                .split(\" \")\r\n                .map((word) => {\r\n                  return word.charAt(0).toUpperCase() + word.slice(1);\r\n                })\r\n                .join(\" \"),\r\n            },\r\n          ]);\r\n        } else {\r\n          alert(\"roles already exist\");\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n\r\n      case \"person\":\r\n        if (\r\n          data.find(\r\n            (d) =>\r\n              d.firstName.toLocaleLowerCase() ===\r\n              value.firstName.toLocaleLowerCase()\r\n          ) === undefined\r\n        ) {\r\n          setData((prev) => [\r\n            ...prev,\r\n            { ...value, id: Math.floor(Math.random() * 100) },\r\n          ]);\r\n        } else {\r\n          alert(\"roles already exist\");\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id, value) => {\r\n    console.log(\"before edit\", data);\r\n\r\n    if (page.toLocaleLowerCase() === \"company\") {\r\n      setData((prev) =>\r\n        prev.map((obj) =>\r\n          obj.IdCompany === id ? { ...obj, CompanyName: value } : obj\r\n        )\r\n      );\r\n    } else if (page.toLocaleLowerCase() === \"roles\") {\r\n      setData((prev) =>\r\n        prev.map((obj) => (obj.id === id ? { ...obj, roleName: value } : obj))\r\n      );\r\n    } else {\r\n      setData((prev) => {\r\n        let index = prev.findIndex((p) => p.id === id);\r\n        prev[index] = value;\r\n        return prev;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CentralDataContext.Provider\r\n      value={{\r\n        data,\r\n        displayCheck,\r\n        checked,\r\n        handleCheck,\r\n        handleDel,\r\n        handleAdd,\r\n        handleEdit,\r\n        setData,\r\n        page,\r\n        team,\r\n        action,\r\n        setAction,\r\n        handleFavProj,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CentralDataContext.Provider>\r\n  );\r\n};\r\nexport default CentralDataProvider;\r\n","import { IconButton } from \"@mui/material\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport \"../Pages/headerbar.css\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  buttonicon: { alignSelf: \"center\", color: \"black\" },\r\n});\r\n\r\nexport default function Header({ handleShow }) {\r\n  const classes = useStyles();\r\n  const { handleDel } = useContext(CentralDataContext);\r\n  const { pathname } = useLocation();\r\n  const { id } = useParams();\r\n\r\n  let isTaskPage = pathname.split(\"/\").includes(\"task\");\r\n\r\n  let title =\r\n    !isTaskPage && id === undefined\r\n      ? pathname.split(\"/\")[1][0].toUpperCase() +\r\n        pathname.split(\"/\")[1].slice(1)\r\n      : `Project ${id}`;\r\n\r\n  let style =\r\n    title === \"Project\"\r\n      ? {\r\n          fontSize: \"20px\",\r\n          margin: \"auto\",\r\n        }\r\n      : {\r\n          fontSize: \"20px\",\r\n          textAlign: \"center\",\r\n          width: isTaskPage ? \"82%\" : \"60.5%\",\r\n        };\r\n\r\n  let display = title === \"Task\" || isTaskPage ? \"none\" : \"flex\";\r\n\r\n  console.log(\"display:\", title, display);\r\n\r\n  return (\r\n    <div className=\"header-container\">\r\n      <div style={style}>{title}</div>\r\n      {title !== \"Project\" && (\r\n        <div className=\"icons-container\">\r\n          <IconButton onClick={handleShow} size=\"small\" aria-label=\"add\">\r\n            <AddIcon className={classes.buttonicon} />\r\n          </IconButton>\r\n          <IconButton\r\n            sx={{ display: { display } }}\r\n            onClick={handleDel}\r\n            size=\"small\"\r\n            aria-label=\"delete\"\r\n          >\r\n            <DeleteIcon className={classes.buttonicon} />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { CentralDataContext } from \"./CentralDataContext\";\r\n\r\nexport const ProjectContext = createContext();\r\n\r\nconst ProjectProvider = (props) => {\r\n  const { data, setData } = useContext(CentralDataContext);\r\n\r\n  const handleAddProject = (event, value) => {\r\n    if (!data.find((proj) => proj.projectid === value.projectNum)) {\r\n      setData((prev) => [\r\n        ...prev,\r\n        {\r\n          ...value,\r\n          id: Math.floor(Math.random() * 100),\r\n          key: Math.floor(Math.random() * 100),\r\n        },\r\n      ]);\r\n    } else {\r\n      alert(\"project already exist\");\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const handleEditProject = (id, value) => {\r\n    console.log(\"editing\", id, value);\r\n    setData((prev) => {\r\n      let index = prev.findIndex((p) => p.projectNum === id);\r\n      prev[index] = value;\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handleDelProject = (id) => {\r\n    console.log(\"deleting\", id);\r\n    let project = data.filter((proj) => proj.projectNum !== id);\r\n    setData(project);\r\n  };\r\n  return (\r\n    <ProjectContext.Provider\r\n      value={{ handleAddProject, handleDelProject, handleEditProject }}\r\n    >\r\n      {props.children}\r\n    </ProjectContext.Provider>\r\n  );\r\n};\r\nexport default ProjectProvider;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./inputFormModal.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport { ProjectContext } from \"../Context/ProjectContext\";\r\n\r\nconst ProjectModal = ({ show, handleClose, Id }) => {\r\n  const [formData, setFormData] = useState({\r\n    projectNum: \"\",\r\n    projectName: \"\",\r\n    projectDescription: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    //memberCount: \"\",\r\n  });\r\n\r\n  const { action, data } = useContext(CentralDataContext);\r\n  const { handleAddProject, handleEditProject } = useContext(ProjectContext);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevFormData) => {\r\n      return {\r\n        ...prevFormData,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    handleAddProject(event, formData);\r\n    event.preventDefault();\r\n    handleClosing();\r\n    console.log(\"Submit\");\r\n  };\r\n\r\n  const handleClosing = () => {\r\n    setFormData({\r\n      projectNum: \"\",\r\n      projectName: \"\",\r\n      projectDescription: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      // memberCount: \"\",\r\n    });\r\n    handleClose();\r\n    console.log(\"Closing\");\r\n  };\r\n\r\n  const handleEditName = (id, value) => {\r\n    handleEditProject(id, value);\r\n    console.log(\"editing\");\r\n    handleClosing();\r\n  };\r\n\r\n  console.log(\"FORM DATA:\", Id, formData);\r\n  /*const formatdate = (value) => {\r\n    let temp = value.split(\"-\");\r\n\r\n    return temp[2] + \"-\" + temp[1] + \"-\" + temp[0];\r\n  };*/\r\n  useEffect(() => {\r\n    if (Id !== null) {\r\n      console.log(\"in\");\r\n      let project = data.find((d) => d.projectNum === Id);\r\n      console.log(\"found:\", project);\r\n      const {\r\n        projectNum,\r\n        projectName,\r\n        projectDescription,\r\n        startDate,\r\n        endDate,\r\n      } = project;\r\n      console.log({\r\n        projectNum,\r\n        projectName,\r\n        projectDescription,\r\n      });\r\n      setFormData({\r\n        projectNum,\r\n        projectName,\r\n        projectDescription,\r\n        startDate,\r\n        endDate,\r\n      });\r\n    }\r\n  }, [Id]);\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Project</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Project Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"projectNum\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Number ....\"\r\n                value={formData.projectNum}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"projectName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Name ...\"\r\n                value={formData.projectName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"projectDescription\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Description...\"\r\n                value={formData.projectDescription}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Number of Team Members</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"memberCount\"\r\n                onChange={handleChange}\r\n                placeholder=\"number of member\"\r\n                value={formData.memberCount}\r\n              />\r\n  </Form.Group>*/}\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                onChange={handleChange}\r\n                value={formData.startDate}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                onChange={handleChange}\r\n                value={formData.endDate}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClosing}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={\r\n              Id === null ? handleSubmit : () => handleEditName(Id, formData)\r\n            }\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default ProjectModal;\r\n","import React, { useState } from \"react\";\r\n\r\nconst useCommonState = (setAction) => {\r\n  const [show, setShow] = useState(false);\r\n  const [id, setId] = useState(null);\r\n\r\n  const handleClose = () => {\r\n    setAction(\"Add\");\r\n    setId(null);\r\n    setShow(false);\r\n  };\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const handleShowEdit = (id) => {\r\n    console.log(\"id:\", id);\r\n    setId(id);\r\n    setShow(true);\r\n    setAction(\"Edit\");\r\n  };\r\n\r\n  return { show, id, handleClose, handleShow, handleShowEdit };\r\n};\r\nexport default useCommonState;\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ProjectCard from \"../card/cardItem\";\r\nimport ProjectData from \"../card/cardList\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nimport ProjectModal from \"../modal/ProjectModal\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport useCommonState from \"../CustomHooks/useCommonState\";\r\nimport { ProjectContext } from \"../Context/ProjectContext\";\r\n\r\nconst useStyles = makeStyles({\r\n  gridContainer: {},\r\n  gridItem: {\r\n    padding: \"25px\",\r\n    height: \"100p%\",\r\n  },\r\n});\r\n\r\nexport default function Project() {\r\n  const { setAction, data, handleFavProj } = useContext(CentralDataContext);\r\n  const { show, id, handleClose, handleShow, handleShowEdit } = useCommonState(\r\n    setAction\r\n  );\r\n  const { handleDelProject } = useContext(ProjectContext);\r\n  console.log(\"projects\", data);\r\n  const classes = useStyles();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = (id) => {\r\n    console.log(id);\r\n    navigate(\"/task/\" + id);\r\n  };\r\n\r\n  let projectitems = data.map((proj) => {\r\n    return (\r\n      <Grid item className={classes.gridItem} xs={12} s={8} md={6} lg={4}>\r\n        <ProjectCard\r\n          key={proj.key}\r\n          projectInfo={proj}\r\n          onClick={onClick}\r\n          id={proj.projectNum}\r\n          handleShowEdit={handleShowEdit}\r\n          handleDel={handleDelProject}\r\n          handleFav={handleFavProj}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Header handleShow={handleShow} name={\"Projects\"} />\r\n      <Grid container className={classes.gridContainer}>\r\n        {projectitems}\r\n      </Grid>\r\n      <ProjectModal Id={id} show={show} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TasksList from \"./taskDetails.js\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./taskCard.css\";\r\nimport AvatarGroup from \"react-avatar-group\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\r\nimport \"@szhsin/react-menu/dist/index.css\";\r\nimport \"@szhsin/react-menu/dist/transitions/slide.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BsThreeDotsVertical, BsFillCalendarCheckFill } from \"react-icons/bs\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\r\nimport StarOutlinedIcon from \"@mui/icons-material/StarOutlined\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nexport default function TaskCard({\r\n  onClick,\r\n  taskid,\r\n  tasksInfo,\r\n  handleShowEdit,\r\n  handleFav,\r\n}) {\r\n  const [status, setStatus] = useState(\"Completed\");\r\n\r\n  let style = status === \"on-site\" ? \"rgb(216, 167, 52)\" : \"green\";\r\n  const handleDelete = (id) => {\r\n    console.log(\"deleting\", id);\r\n  };\r\n  const [isFavourite, setIsFavourite] = useState(false);\r\n\r\n  const handleFavouriteProj = (id) => {\r\n    setIsFavourite((prev) => !prev);\r\n    handleFav(id);\r\n  };\r\n\r\n  let star = isFavourite ? (\r\n    <StarOutlinedIcon sx={{ color: \"#ffaa00\" }} />\r\n  ) : (\r\n    <StarBorderOutlinedIcon />\r\n  );\r\n\r\n  return (\r\n    <Card className=\"task-card\" key={tasksInfo.key}>\r\n      <Card.Header className=\"card-header-modif\">\r\n        <h5 className=\"title\">{tasksInfo.taskid}</h5>\r\n        <div className=\"header-icon\">\r\n          <Menu\r\n            menuButton={\r\n              <MenuButton\r\n                style={{ backgroundColor: style }}\r\n                className=\"status-button\"\r\n              >\r\n                {status}\r\n              </MenuButton>\r\n            }\r\n            onItemClick={(e) => setStatus(e.value)}\r\n            transition\r\n          >\r\n            <MenuItem value=\"on-site\">On site</MenuItem>\r\n            <MenuItem value=\"In-progress\">In-progress</MenuItem>\r\n            <MenuItem value=\"pending\">Pending</MenuItem>\r\n          </Menu>\r\n          <IconButton onClick={() => handleFavouriteProj(taskid)} size=\"small\">\r\n            {star}\r\n          </IconButton>\r\n          <Menu\r\n            menuButton={\r\n              <MenuButton className=\"more-button\">\r\n                <BsThreeDotsVertical size=\"1.2rem\"></BsThreeDotsVertical>\r\n              </MenuButton>\r\n            }\r\n            onItemClick={(e) => {\r\n              if (e.value === \"edit\") {\r\n                handleShowEdit(taskid);\r\n              } else {\r\n                handleDelete(taskid);\r\n              }\r\n            }}\r\n            transition\r\n          >\r\n            <MenuItem value=\"edit\">\r\n              <EditIcon sx={{ marginRight: \"5px\" }} />\r\n              Edit\r\n            </MenuItem>\r\n            <MenuItem value=\"delete\">\r\n              <DeleteIcon sx={{ marginRight: \"5px\" }} />\r\n              Delete\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Card.Header>\r\n      <Card.Body\r\n        style={{\r\n          cursor: \"pointer\",\r\n        }}\r\n        className=\"card-background\"\r\n        onClick={() => onClick(taskid)}\r\n      >\r\n        <Card.Text>{tasksInfo.title}</Card.Text>\r\n        <Card.Text>{tasksInfo.taskdesc}</Card.Text>\r\n      </Card.Body>\r\n      <Card.Footer className=\"footer-container card-background\">\r\n        <div className=\"dates-container-2\">\r\n          <BsFillCalendarCheckFill size=\"1.0rem\"></BsFillCalendarCheckFill>\r\n          <div className=\"dates\">\r\n            {tasksInfo.startdate.split(\"-\").join(\"/\")} -{\" \"}\r\n            {tasksInfo.enddate.split(\"-\").join(\"/\")}\r\n          </div>\r\n        </div>\r\n        <AvatarGroup\r\n          avatars={[\"James\", \"Amy\", \"Will\"]}\r\n          initialCharacters={1}\r\n          max={2}\r\n          size={25}\r\n          displayAllOnHover\r\n          shadow={2}\r\n        />\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./inputFormModal.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport Select from \"react-select\";\r\n\r\nconst TasksModal = ({ show, handleClose, Id }) => {\r\n  const [formData, setFormData] = useState({\r\n    taskName: \"\",\r\n    taskDescription: \"\",\r\n    requestedBy: \"\",\r\n    assignedTo: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    status: \"\",\r\n  });\r\n\r\n  const { data, action } = useContext(CentralDataContext);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevFormData) => {\r\n      return {\r\n        ...prevFormData,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSelectChange = (value, action) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [action]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Submit\");\r\n  };\r\n\r\n  const handleClosing = () => {\r\n    handleClose();\r\n    console.log(\"Closing\");\r\n  };\r\n\r\n  const handleEditName = (id, name) => {\r\n    console.log(\"editing\");\r\n    handleClosing();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Id !== null) {\r\n      console.log(\"in\");\r\n      let task = data.find((d) => d.projectid === Id);\r\n      console.log(\"tasks\", task);\r\n      const { taskdesc } = task;\r\n      setFormData((prev) => ({ ...prev, taskDescription: taskdesc }));\r\n    }\r\n  }, [Id]);\r\n\r\n  console.log(\"FORM DATA:\", Id, formData);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Task Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"taskName\"\r\n                onChange={handleChange}\r\n                placeholder=\"task name ....\"\r\n                value={formData.taskName}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"taskDescription\"\r\n                onChange={handleChange}\r\n                placeholder=\"task Description...\"\r\n                value={formData.taskDescription}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Requested By</Form.Label>\r\n              <Select\r\n                name=\"requestedBy\"\r\n                placeholder={\"Select members\"}\r\n                value={formData.requestedBy}\r\n                onChange={(entry) => handleSelectChange(entry, \"requestedBy\")}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Assigned To</Form.Label>\r\n              <Select\r\n                name=\"assignedTo\"\r\n                placeholder={\"Select members\"}\r\n                value={formData.assignedTo}\r\n                onChange={(entry) => handleSelectChange(entry, \"assignedTo\")}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                onChange={handleChange}\r\n                value={formData.startDate}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                onChange={handleChange}\r\n                value={formData.endDate}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>status</Form.Label>\r\n              <Select\r\n                name=\"status\"\r\n                placeholder={\"Select status\"}\r\n                value={formData.status}\r\n                onChange={(entry) => handleSelectChange(entry, \"status\")}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClosing}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={\r\n              Id === null ? handleSubmit : () => handleEditName(Id, \"editing\")\r\n            }\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default TasksModal;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TasksList from \"./taskDetails.js\";\r\nimport \"./taskCard.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"@szhsin/react-menu/dist/index.css\";\r\nimport \"@szhsin/react-menu/dist/transitions/slide.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TaskCard from \"./taskCard.js\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport { BsSearch, BsPlus } from \"react-icons/bs\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Header from \"../Header/Header.js\";\r\nimport TasksModal from \"../modal/TasksModal.js\";\r\nimport useCommonState from \"../CustomHooks/useCommonState\";\r\n\r\nexport default function Task() {\r\n  const { id } = useParams();\r\n  const { setAction, handleFavProj } = useContext(CentralDataContext);\r\n  const {\r\n    show,\r\n    id: Id,\r\n    handleClose,\r\n    handleShow,\r\n    handleShowEdit,\r\n  } = useCommonState(setAction);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = (id) => {\r\n    console.log(id);\r\n    navigate(\"/log/\" + id);\r\n  };\r\n\r\n  let temp;\r\n  let matches = TasksList.filter((t) => t.projectid === id);\r\n  let title = matches.length > 0 ? `Project ${id}` : <></>;\r\n  temp =\r\n    matches.length > 0\r\n      ? matches.map((t) => (\r\n          <Grid item xs={12} s={8} md={6} lg={4}>\r\n            <TaskCard\r\n              tasksInfo={t}\r\n              onClick={onClick}\r\n              handleFav={handleFavProj}\r\n              taskid={t.projectid}\r\n            />\r\n          </Grid>\r\n        ))\r\n      : (temp = TasksList.map((t) => (\r\n          <Grid item xs={12} s={8} md={6} lg={4}>\r\n            <TaskCard\r\n              tasksInfo={t}\r\n              onClick={onClick}\r\n              taskid={t.projectid}\r\n              handleShowEdit={handleShowEdit}\r\n              handleFav={handleFavProj}\r\n            />\r\n          </Grid>\r\n        )));\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        handleShow={handleShow}\r\n        name={id === undefined ? \"Tasks\" : title}\r\n      />\r\n      <div className=\"main-container\">\r\n        <Grid container spacing={2} className=\"grid-container\">\r\n          {temp}\r\n        </Grid>\r\n      </div>\r\n      <TasksModal Id={Id} show={show} handleClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","import List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport React, { useContext } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\n\r\nfunction stringAvatar(name) {\r\n  return name.split(\" \").length > 1 && !(parseInt(name.split(\" \")[1][0]) >= 0)\r\n    ? { children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}` }\r\n    : { children: `${name.split(\" \")[0][0]}` };\r\n}\r\n\r\nconst ListItems = ({ handleShow }) => {\r\n  const { checked, handleCheck, data, displayCheck, page, team } = useContext(\r\n    CentralDataContext\r\n  );\r\n  console.log(\"in list items:\", team);\r\n  let listItems = [];\r\n  let Items = [];\r\n\r\n  switch (page.toLocaleLowerCase()) {\r\n    case \"company\":\r\n      console.log(\"load company\");\r\n      Items = data.map(({ CompanyName: name, IdCompany: id }) => ({\r\n        name,\r\n        id,\r\n      }));\r\n      break;\r\n    case \"roles\":\r\n      console.log(\"load roles\");\r\n      Items = data.map(({ roleName: name, id: id }) => ({\r\n        name,\r\n        id,\r\n      }));\r\n      break;\r\n    case \"person\":\r\n      Items = data.map(({ firstName: name, lastName: lname, id: id }) => ({\r\n        name,\r\n        lname,\r\n        id,\r\n      }));\r\n      break;\r\n    case \"team\":\r\n      Items = team.map(({ teamName: name, id: id }) => ({\r\n        name,\r\n        id,\r\n      }));\r\n      break;\r\n    default:\r\n      Items = [];\r\n  }\r\n\r\n  console.log(Items);\r\n  listItems =\r\n    Items.length > 0\r\n      ? Items.sort((a, b) => a.name.localeCompare(b.name)).map((data) => {\r\n          let name =\r\n            page.toLocaleLowerCase() === \"person\"\r\n              ? `${data.name} ${data.lname}`\r\n              : data.name;\r\n          return (\r\n            <>\r\n              <ListItem\r\n                sx={{\r\n                  backgroundColor: \"#e6f0ff\",\r\n                  alignItems: \"center\",\r\n                  borderRadius: 10,\r\n                  gap: 0,\r\n                }}\r\n                alignItems=\"flex-start\"\r\n              >\r\n                <ListItemIcon\r\n                  sx={{ minWidth: 0, marginTop: 0, display: displayCheck }}\r\n                >\r\n                  <Checkbox\r\n                    checked={checked.indexOf(data.id) !== -1}\r\n                    onClick={() => handleCheck(data.id)}\r\n                    edge=\"start\"\r\n                    disableRipple\r\n                  />\r\n                </ListItemIcon>\r\n\r\n                <ListItemButton sx={{ padding: 0 }}>\r\n                  <ListItemAvatar sx={{ marginTop: 0 }}>\r\n                    <Avatar\r\n                      sx={{\r\n                        bgcolor: \"#1976d2\",\r\n                        width: 40,\r\n                        height: 40,\r\n                        fontWeight: \"bold\",\r\n                        padding: \"25px\",\r\n                      }}\r\n                      {...stringAvatar(name)}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={name} />\r\n                </ListItemButton>\r\n                <IconButton onClick={() => handleShow(data.id)} size=\"small\">\r\n                  <EditIcon />\r\n                </IconButton>\r\n              </ListItem>\r\n              <Divider\r\n                sx={{ borderColor: \"white\", borderBottomWidth: \"medium\" }}\r\n                variant=\"inset\"\r\n                component=\"li\"\r\n              />\r\n            </>\r\n          );\r\n        })\r\n      : [];\r\n\r\n  return <>{listItems}</>;\r\n};\r\nexport default ListItems;\r\n","import List from \"@mui/material/List\";\r\nimport React from \"react\";\r\nimport ListItems from \"./ListItems\";\r\nimport CompanyList from \"./CompanyList\";\r\nimport CentralDataProvider from \"../Context/CentralDataContext\";\r\n\r\nconst ListContainer = ({ handleShow }) => {\r\n  return (\r\n    <>\r\n      <List\r\n        sx={{\r\n          width: \"100%\",\r\n          bgcolor: \"background.paper\",\r\n          padding: \"0px\",\r\n          marginTop: 1,\r\n        }}\r\n      >\r\n        <ListItems handleShow={handleShow} data={CompanyList} />\r\n      </List>\r\n    </>\r\n  );\r\n};\r\nexport default ListContainer;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./inputFormModal.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\n\r\nconst DataModal = ({ show, handleClose, Id }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const { handleAdd, data, handleEdit, page, action } = useContext(\r\n    CentralDataContext\r\n  );\r\n\r\n  let pageName = page.toLocaleLowerCase();\r\n\r\n  let pageTitle =\r\n    pageName === \"company\"\r\n      ? \"Company\"\r\n      : pageName === \"roles\"\r\n      ? \"Role\"\r\n      : \"Person\";\r\n\r\n  let formName =\r\n    pageName === \"company\"\r\n      ? \"CompanyName\"\r\n      : pageName === \"roles\"\r\n      ? \"roleName\"\r\n      : \"PersonName\";\r\n\r\n  const handleChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (name === \"\") {\r\n      alert(\"Please enter a name\");\r\n    } else {\r\n      handleAdd(event, name);\r\n      handleClosing();\r\n    }\r\n  };\r\n\r\n  const handleClosing = () => {\r\n    handleClose();\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleEditName = (id, name) => {\r\n    handleEdit(id, name);\r\n    handleClosing();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Id !== null) {\r\n      console.log(\"in\");\r\n\r\n      if (pageName === \"company\") {\r\n        let company = data.find((d) => d.IdCompany === Id);\r\n        const { CompanyName } = company;\r\n        console.log(CompanyName);\r\n        setName(CompanyName);\r\n      } else if (pageName === \"roles\") {\r\n        let role = data.find((d) => d.id === Id);\r\n        const { roleName } = role;\r\n        console.log(role);\r\n        setName(roleName);\r\n      } else {\r\n        let person = data.find((d) => d.id === Id);\r\n        const { PersonName } = person;\r\n        console.log(person);\r\n        setName(PersonName);\r\n      }\r\n    }\r\n  }, [Id]);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {action === \"Add\" ? \"New\" : \"Edit\"} {pageTitle}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name={formName}\r\n                onChange={handleChange}\r\n                placeholder=\"Name...\"\r\n                value={name}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClosing}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={\r\n              Id === null ? handleSubmit : () => handleEditName(Id, name)\r\n            }\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default DataModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./inputFormModal.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport Select from \"react-select\";\r\nimport CompanyList from \"../Pages/CompanyList\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\n\r\nconst PersonDataModal = ({ show, handleClose, Id }) => {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailAdd: \"\",\r\n    phoneNum: \"\",\r\n    company: {\r\n      value: \"\",\r\n      label: \"\",\r\n    },\r\n  });\r\n  const { handleAdd, data, action, handleEdit } = useContext(\r\n    CentralDataContext\r\n  );\r\n\r\n  const handleSelectPhone = (event) => {\r\n    console.log(\"heyy\", event);\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      phoneNum: event,\r\n    }));\r\n  };\r\n\r\n  const handleSelectChange = (value, action) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [action]: value,\r\n    }));\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevFormData) => {\r\n      return {\r\n        ...prevFormData,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Submit\");\r\n    handleAdd(event, formData);\r\n    handleClosing();\r\n  };\r\n\r\n  const handleClosing = () => {\r\n    handleClose();\r\n    setFormData({\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      emailAdd: \"\",\r\n      phoneNum: \"\",\r\n      company: {},\r\n    });\r\n    console.log(\"Closing\");\r\n  };\r\n\r\n  const handleEditName = (id, value) => {\r\n    handleEdit(id, value);\r\n    handleClosing();\r\n    console.log(\"editing\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Id !== null) {\r\n      console.log(\"in\");\r\n      let person = data.find((d) => d.id === Id);\r\n      const { firstName, lastName, phoneNum, emailAdd, company } = person;\r\n      console.log(person);\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        firstName,\r\n        lastName,\r\n        emailAdd,\r\n        phoneNum,\r\n        company,\r\n      }));\r\n    }\r\n  }, [Id]);\r\n\r\n  let companyOptions = CompanyList.map((c) => ({\r\n    value: c.CompanyName,\r\n    label: c.CompanyName,\r\n  }));\r\n\r\n  console.log(\"FORM DATA:\", Id, formData);\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Person</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Firstname</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Name...\"\r\n                value={formData.firstName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Lastname</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Name...\"\r\n                value={formData.lastName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"emailAdd\"\r\n                onChange={handleChange}\r\n                placeholder=\"email...\"\r\n                value={formData.emailAdd}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Phone No.</Form.Label>\r\n              <PhoneInput\r\n                placeholder=\"Enter phone number\"\r\n                value={formData.phoneNum}\r\n                onChange={(e) => handleSelectPhone(e)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Company</Form.Label>\r\n              <Select\r\n                name=\"company\"\r\n                placeholder={\"Select Company\"}\r\n                options={companyOptions}\r\n                value={formData.company}\r\n                onChange={(entry) => handleSelectChange(entry, \"company\")}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClosing}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={\r\n              Id === null ? handleSubmit : () => handleEditName(Id, formData)\r\n            }\r\n          >\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default PersonDataModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./inputFormModal.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport { ProjectContext } from \"../Context/ProjectContext\";\r\nimport ProjectData from \"../card/cardList\";\r\nimport RolesList from \"../Pages/RolesList\";\r\nimport Select from \"react-select\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst TeamModal = ({ show, handleClose, Id }) => {\r\n  const [formData, setFormData] = useState({\r\n    projectId: \"\",\r\n    teamName: \"\",\r\n    teamDescription: \"\",\r\n    members: [\r\n      {\r\n        memberName: \"\",\r\n        role: \"\",\r\n      },\r\n    ],\r\n  });\r\n  const [count, setCount] = useState(2);\r\n\r\n  const { action, data, team } = useContext(CentralDataContext);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData((prevFormData) => {\r\n      return {\r\n        ...prevFormData,\r\n        [event.target.name]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const addMember = () => {\r\n    setCount((prev) => prev + 1);\r\n  };\r\n\r\n  const removeMember = () => {\r\n    setCount((prev) => prev - 1);\r\n  };\r\n\r\n  let roleOptions = RolesList.map((r) => ({\r\n    value: r.roleName,\r\n    label: r.roleName,\r\n  }));\r\n  /*\r\n  const handleSubmit = (event) => {\r\n    handleAddProject(event, formData);\r\n    event.preventDefault();\r\n    handleClosing();\r\n    console.log(\"Submit\");\r\n  };\r\n*/\r\n  const handleClosing = () => {\r\n    setFormData({\r\n      projectId: \"\",\r\n      teamName: \"\",\r\n      teamDescription: \"\",\r\n      members: [{ memberName: \"\", role: \"\" }],\r\n    });\r\n    handleClose();\r\n    console.log(\"Closing\");\r\n  };\r\n  /*\r\n  const handleEditName = (id, value) => {\r\n    handleEditProject(id, value);\r\n    console.log(\"editing\");\r\n    handleClosing();\r\n  };\r\n*/\r\n  console.log(\"FORM DATA:\", Id, formData);\r\n\r\n  useEffect(() => {\r\n    if (Id !== null) {\r\n      console.log(\"in\", team);\r\n      let teamSelected = team.find((t) => t.id === Id);\r\n      console.log(\"team to edit:\", teamSelected);\r\n      const { projectId, teamName, teamDescription, members } = teamSelected;\r\n      setFormData({ projectId, teamName, teamDescription, members });\r\n      let { memberCount } = ProjectData.find(\r\n        (proj) => proj.projectNum === projectId\r\n      );\r\n      //console.log(\"memberCount\", memberCount);\r\n      //setCount(memberCount);\r\n    }\r\n  }, [Id]);\r\n\r\n  const processMemberElement = (count) => {\r\n    let arr = [];\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      arr[i] = (\r\n        <div className=\"input-group\">\r\n          <Form.Group className=\" member-group\">\r\n            {/*<Form.Control\r\n                className=\"member\"\r\n                type=\"text\"\r\n                name=\"memberName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Name...\"\r\n                value={m.memberName}\r\n              />*/}\r\n            <Select\r\n              className=\"member\"\r\n              /* value={{\r\n                value: team[0].members[i].memberName,\r\n                label: team[0].members[i].memberName,\r\n              }}*/\r\n              type=\"text\"\r\n              name=\"memberName\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"role-group\">\r\n            <Select\r\n              name=\"role\"\r\n              options={roleOptions}\r\n              value={formData.members[0].role}\r\n            />\r\n          </Form.Group>\r\n          <IconButton onClick={() => removeMember()}>\r\n            <ClearIcon className=\"clear-button\" />\r\n          </IconButton>\r\n        </div>\r\n      );\r\n    }\r\n    console.log(\"array\", arr);\r\n    return arr;\r\n  };\r\n\r\n  let membersElement =\r\n    count === 1 ? (\r\n      <div className=\"input-group\">\r\n        <Form.Group className=\" member-group\">\r\n          {/*<Form.Control\r\n                className=\"member\"\r\n                type=\"text\"\r\n                name=\"memberName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Name...\"\r\n                value={m.memberName}\r\n              />*/}\r\n          <Select\r\n            className=\"member\"\r\n            /*value={{\r\n              value: team[0].members[0].memberName,\r\n              label: team[0].members[0].memberName,\r\n            }}*/\r\n            type=\"text\"\r\n            name=\"memberName\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"role-group\">\r\n          <Select\r\n            name=\"role\"\r\n            options={roleOptions}\r\n            value={formData.members[0].role}\r\n          />\r\n        </Form.Group>\r\n        <IconButton onClick={() => removeMember()}>\r\n          <ClearIcon className=\"clear-button\" />\r\n        </IconButton>\r\n      </div>\r\n    ) : (\r\n      processMemberElement(count)\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClosing} animation={true}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Team</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Project Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"projectId\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Number ....\"\r\n                value={formData.projectId}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Team Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"teamName\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Name ...\"\r\n                value={formData.teamName}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\r\n              <Form.Label>Team Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"teamDescription\"\r\n                onChange={handleChange}\r\n                placeholder=\"Project Description...\"\r\n                value={formData.teamDescription}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <div>\r\n            <div className=\"labels-input\">\r\n              <span>\r\n                Member{\" \"}\r\n                <IconButton onClick={() => addMember()}>\r\n                  <AddIcon className=\"add-member-button\" />\r\n                </IconButton>\r\n              </span>\r\n\r\n              <span>Role</span>\r\n            </div>\r\n\r\n            {membersElement}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClosing}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\">Save Changes</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default TeamModal;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport { blue, white } from \"@mui/material/colors\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./headerbar.css\";\r\nimport ListContainer from \"./ListContainer\";\r\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\r\nimport DataModal from \"../modal/DataModal\";\r\nimport Header from \"../Header/Header\";\r\nimport PersonDataModal from \"../modal/PersonDataModal\";\r\nimport useCommonState from \"../CustomHooks/useCommonState\";\r\nimport TeamModal from \"../modal/TeamModal\";\r\n\r\nconst Company = () => {\r\n  const { page, setAction } = useContext(CentralDataContext);\r\n  const { show, id, handleClose, handleShow, handleShowEdit } = useCommonState(\r\n    setAction\r\n  );\r\n\r\n  console.log(\"id:\", id);\r\n  let Modal =\r\n    page === \"Company\" || page === \"Roles\" ? (\r\n      <DataModal Id={id} show={show} handleClose={handleClose} />\r\n    ) : page == \"Team\" ? (\r\n      <TeamModal Id={id} show={show} handleClose={handleClose} />\r\n    ) : (\r\n      <PersonDataModal Id={id} show={show} handleClose={handleClose} />\r\n    );\r\n  return (\r\n    <>\r\n      <Header handleShow={handleShow} name={page} />\r\n      <ListContainer handleShow={handleShowEdit} />\r\n      {Modal}\r\n    </>\r\n  );\r\n};\r\nexport default Company;\r\n","import React from \"react\";\r\n\r\nconst Recent = () => {\r\n  return <>Recent</>;\r\n};\r\nexport default Recent;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport ResponsiveAppBar from \"./components/appbar/appbar\";\r\nimport SimpleAccordion from \"./components/accordian/accordionList\";\r\nimport LogForm from \"./components/inputform/logform\";\r\nimport InputFormModal from \"./components/modal/inputFormModal\";\r\nimport BasicTable from \"./components/dataTable/DataTable\";\r\nimport LogList from \"./components/log/LogList\";\r\nimport Project from \"./components/project/project\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Task from \"./components/tasks/tasks\";\r\nimport TaskList from \"./components/tasks/taskCard\";\r\nimport Company from \"./components/Pages/Company\";\r\nimport CentralDataProvider from \"../src/components/Context/CentralDataContext\";\r\nimport ProjectProvider from \"./components/Context/ProjectContext\";\r\nimport Recent from \"./components/Recent/Recent\";\r\nimport Team from \"./components/Team/Team\";\r\n\r\nfunction App() {\r\n  let logs = [\r\n    {\r\n      key: 1,\r\n      username: \"Vishnu\",\r\n      taskid: \"20\",\r\n      date: \"24-08-2022\",\r\n      comments: \"Testing the functionality\",\r\n      workingTime: \"5hrs 30mins \",\r\n      status: \"Open\",\r\n    },\r\n    {\r\n      key: 2,\r\n      username: \"Vijay\",\r\n      taskid: \"21\",\r\n      date: \"24-08-2022\",\r\n      comments: \"Testing the functionality2\",\r\n      workingTime: \"4hrs 20mins \",\r\n      status: \"Open\",\r\n    },\r\n    {\r\n      key: 3,\r\n      username: \"josep\",\r\n      taskid: \"22\",\r\n      date: \"24-08-2022\",\r\n      comments: \"Testing the functionality3\",\r\n      workingTime: \"3hrs 50mins \",\r\n      Status: \"Open\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <ResponsiveAppBar></ResponsiveAppBar>\r\n      <Routes>\r\n        <Route\r\n          path=\"/:name\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <Company />\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/project\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <ProjectProvider>\r\n                <Project />\r\n              </ProjectProvider>\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/task\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <Task />\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/recent\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <Recent />\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n\r\n        <Route\r\n          path=\"/team\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <Company />\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/task/:id\"\r\n          element={\r\n            <CentralDataProvider>\r\n              <Task />\r\n            </CentralDataProvider>\r\n          }\r\n        />\r\n        <Route path=\"/log/:id\" element={<LogList logs={logs} />} />\r\n        <Route\r\n          path=\"/logform\"\r\n          element={\r\n            <InputFormModal\r\n              formType={<LogForm initialState={{}}></LogForm>}\r\n            ></InputFormModal>\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}