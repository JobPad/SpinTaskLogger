{"version":3,"sources":["components/accordian/commissioning.jpg","logo.svg","components/log/commissioning.jpg","components/appbar/appbar.jsx","components/inputform/logform.jsx","components/modal/inputFormModal.jsx","components/log/LogItem.js","components/Pages/CompanyList.js","components/Pages/RolesList.js","components/Pages/PersonsList.js","components/tasks/taskDetails.js","components/CustomHooks/useHandleCheckBox.js","components/card/cardList.js","components/Context/CentralDataContext.js","components/Header/Header.js","components/log/LogList.js","components/card/cardItem.js","components/Context/ProjectContext.js","components/modal/ProjectModal.js","components/CustomHooks/useCommonState.js","components/project/project.js","components/tasks/taskCard.js","components/modal/TasksModal.js","components/tasks/tasks.js","components/Pages/ListItems.js","components/Pages/ListContainer.js","components/modal/DataModal.js","components/modal/PersonDataModal.js","components/modal/TeamModal.js","components/Pages/Company.js","components/Recent/Recent.js","components/Home/Home.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","__webpack_require__","p","pages","settings","ResponsiveAppBar","_React$useState","React","_React$useState2","Object","slicedToArray","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","navigate","useNavigate","handleCloseNavMenu","handleCloseUserMenu","handleNav","page","console","log","react","AppBar","position","Container","maxWidth","Toolbar","disableGutters","Typography","variant","noWrap","component","href","sx","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","Box","flexGrow","IconButton","size","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu_default","a","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","map","MenuItem","key","toLocaleLowerCase","textAlign","Adb_default","Button","my","Tooltip","title","Avatar","alt","src","mt","setting","LogForm","_ref","logValue","handleChange","_useState","useState","_useState2","file","setFile","react_default","createElement","FormControl","m","minWidth","TextField","label","onChange","e","target","name","value","placeholder","multiline","maxRows","type","files","URL","createObjectURL","width","height","InputFormModal","formType","closing","edit","handleAdd","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","buttonText","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","className","DialogActions","LogItem","handleChecked","checked","labelid","handleEditOption","ListItem","backgroundColor","alignItems","ListItemButton","disableRipple","paddingLeft","paddingRight","indexOf","tabIndex","inputProps","dense","ListItemIcon","Checkbox","edge","ListItemAvatar","ListItemText","primary","comments","secondary","date","username","workingTime","components_Menu","menuButton","MoreHoriz_default","menuClassName","transition","components_MenuItem","CompanyList","IdCompany","CompanyName","RolesList","roleName","PersonsList","firstName","lastName","emailAdd","phoneNum","company","taskDetails","bgColor","empid","empname","end","enddate","managername","projectdesc","projectid","resourceId","start","startdate","taskdesc","taskid","useHandleCheckBox","setChecked","handleCheck","currentIndex","newChecked","toConsumableArray","push","splice","cardList","endDate","projectDescription","projectNum","startDate","projectName","isFavourite","memberCount","CentralDataContext","createContext","CentralDataProvider","props","data","setData","_useState3","_useState4","setPage","_useState5","_useState6","displayCheck","setDisplayCheck","_useState7","_useState8","delActive","setDelActive","_useState9","_useState10","action","setAction","_useState11","_useState12","setFavouristeList","_useHandleCheckBox","pathname","useLocation","_useState13","_useState14","team","setTeam","useRef","useEffect","split","pageName","toUpperCase","slice","dataToLoad","ProjectData","length","forEach","proj","createTeam","newTeam","Math","floor","random","projectId","teamName","concat","teamDescription","members","memberName","role","prev","Provider","handleDel","check","filter","d","undefined","find","toLowerCase","word","charAt","join","alert","preventDefault","objectSpread","handleEdit","obj","index","findIndex","handleFavProj","children","useStyles","makeStyles","buttonicon","alignSelf","Header","handleShow","classes","useContext","useParams","isTaskPage","includes","isLogPage","style","fontSize","margin","Add_default","Delete_default","LogList","logs","setOpen","setDisplay","setEdit","setLogs","setLogValue","handleEditSelected","handleToggle","previosLogs","List","bgcolor","padding","labelId","Divider","borderColor","borderBottomWidth","logform","prevState","defineProperty","initialState","ProjectCard","projectInfo","handleShowEdit","handleFav","StarOutlined_default","StarBorderOutlined_default","Card","maxHeight","cursor","border","borderRadius","Body","Title","Subtitle","Text","ProjectContext","ProjectProvider","_useContext","handleAddProject","handleDelProject","project","handleEditProject","ProjectModal","show","handleClose","Id","formData","setFormData","_useContext2","prevFormData","handleClosing","Fragment","esm_Modal","onHide","animation","centered","closeButton","Form","Group","controlId","Label","Control","Footer","useCommonState","setShow","setId","gridContainer","gridItem","Project","_useCommonState","projectitems","Grid","item","s","lg","container","modal_ProjectModal","TaskCard","tasksInfo","status","setStatus","setIsFavourite","star","MenuButton","onItemClick","index_esm","Edit_default","marginRight","index_modern","avatars","initialCharacters","max","displayAllOnHover","shadow","TasksModal","taskName","taskDescription","requestedBy","assignedTo","handleSelectChange","task","react_select_esm","entry","Task","temp","matches","TasksList","t","spacing","modal_TasksModal","ListItems","listItems","Items","_ref2","_ref3","_ref4","lname","_ref5","sort","b","localeCompare","gap","marginTop","assign","parseInt","stringAvatar","ListContainer","Pages_ListItems","DataModal","setName","pageTitle","formName","person","PersonName","handleEditName","PersonDataModal","companyOptions","c","min","options","TeamModal","count","setCount","removeMember","roleOptions","r","teamSelected","membersElement","Clear_default","arr","i","processMemberElement","Company","Modal","modal_DataModal","modal_TeamModal","modal_PersonDataModal","Pages_ListContainer","Recent","Home","esm_Button","App","appbar","dist","path","element","Context_CentralDataContext","Pages_Company","Context_ProjectContext","components_Recent_Recent","Status","components_Home_Home","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","createRoot","document","getElementById","render","react_router_dom_dist","src_App","process","origin","addEventListener","fetch","headers","Service-Worker","response","contentType","get","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0402ee8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/commissioning.b65975e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/commissioning.b65975e9.jpg\";","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdbIcon from \"@mui/icons-material/Adb\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst pages = [\n  \"Favourites\",\n  \"Company\",\n  \"Roles\",\n  \"Person\",\n  \"Project\",\n  \"Team\",\n  \"Task\",\n  \"Log\",\n];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const navigate = useNavigate();\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const handleNav = (page) => {\n    console.log(\"/\" + page);\n    handleCloseNavMenu();\n    navigate(\"/\" + page);\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"false\">\n        <Toolbar disableGutters>\n          {/* <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} /> */}\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: \"none\", md: \"flex\" },\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            SPIN AU\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  key={page}\n                  onClick={() => handleNav(page.toLocaleLowerCase())}\n                >\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: \"flex\", md: \"none\" },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            SPIN\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={() => handleNav(page.toLocaleLowerCase())}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","import React, { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nconst LogForm = ({ logValue, handleChange }) => {\n  /*console.log(initialState)*/\n  /*\n    const [logValue , setLogValue] = React.useState(initialState)\n\n\n    const handleChange = (event) =>\n    {\n        setLogValue((prevState)=> ({...prevState,[event.target.label]:event.target.value}))\n    }*/\n  const [file, setFile] = useState();\n  function handleFileChange(e) {\n    console.log(e.target.files);\n    setFile(URL.createObjectURL(e.target.files[0]));\n  }\n  return (\n    <div>\n      {/*<div>\n    <FormControl variant=\"standard\" sx={{ m:1, minWidth:9/10}}>\n        <InputLabel id=\"demo-simple-select-standard-label\">Task</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-standard-label\"\n          id=\"demo-simple-select-standard\"\n          onChange={(e)=>handleChange(e.target.name,e.target.value)}\n          label=\"Age\"\n          name=\"task_id\"\n        >\n          <MenuItem value={10}>Task1</MenuItem>\n          <MenuItem value={20}>Task2</MenuItem>\n          <MenuItem value={30}>Task3</MenuItem>\n        </Select>\n      </FormControl>\n</div>*/}\n      <div>\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Date (DD-MM-YYYY)\"\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\n            name=\"date\"\n            placeholder=\"DD-MM-YYYY\"\n            variant=\"standard\"\n          />\n        </FormControl>\n      </div>\n      <div>\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\n          <TextField\n            id=\"standard-basic\"\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\n            label=\"Time Taken (HH:MM)\"\n            name=\"workingTime\"\n            placeholder=\"HH:MM\"\n            variant=\"standard\"\n          />\n        </FormControl>\n      </div>\n\n      <div>\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\n          <TextField\n            id=\"filled-multiline-flexible\"\n            label=\"Comment\"\n            name=\"comments\"\n            multiline\n            maxRows={4}\n            onChange={(e) => handleChange(e.target.name, e.target.value)}\n            variant=\"filled\"\n          />\n        </FormControl>\n        <FormControl variant=\"standard\" sx={{ m: 2, minWidth: 9 / 10 }}>\n          <input\n            type=\"file\"\n            id=\"myFile\"\n            onChange={handleFileChange}\n            name=\"filename\"\n          ></input>\n        </FormControl>\n        <img width=\"300px\" height=\"100px\" src={file} />\n      </div>\n    </div>\n  );\n};\n\nexport default LogForm;\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport \"./inputFormModal.css\";\n\nexport default function InputFormModal({\n  formType,\n  open,\n  closing,\n  edit,\n  handleAdd,\n}) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  let buttonText = edit ? \"Submit Changes\" : \"Submit\";\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        fullScreen={fullScreen}\n        onClose={closing}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle>Add a new log</DialogTitle>\n        <DialogContent>\n          <DialogContentText className=\"modalDialogueBig\">\n            Fill in the log details\n          </DialogContentText>\n          {formType}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closing}>Cancel</Button>\n          <Button onClick={handleAdd}>{buttonText}</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Typography from \"@mui/material/Typography\";\nimport AlertBox from \"../alert/alertBox\";\nimport commissioning from \"./commissioning.jpg\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport \"./tasklog.css\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nexport default function LogItem({\n  log,\n  handleChecked,\n  checked,\n  labelid,\n  handleEditOption,\n}) {\n  return (\n    <ListItem sx={{ backgroundColor: \"#e6f0ff\" }} alignItems=\"flex-start\">\n      <ListItemButton\n        disableRipple\n        sx={{ paddingLeft: \"0px\", paddingRight: \"0px\" }}\n        onClick={handleChecked(log.key)}\n        checked={checked.indexOf(log.key) !== -1}\n        tabIndex={-1}\n        inputProps={{ \"aria-labelledby\": labelid }}\n        dense\n      >\n        <ListItemIcon sx={{ minWidth: \"0px\" }}>\n          <Checkbox edge=\"start\" disableRipple />\n        </ListItemIcon>\n        <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src=\"\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary={<Typography fontWeight=\"600\">{log.comments}</Typography>}\n          secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\">{log.date}</Typography>\n              <Typography\n                sx={{ display: \"inline\" }}\n                component=\"span\"\n                variant=\"body3\"\n                color=\"text.primary\"\n              >\n                {log.username + \" - \" + log.workingTime}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItemButton>\n      <Menu\n        menuButton={\n          <IconButton className=\"delete-button\" edge=\"end\" aria-label=\"delete\">\n            <MoreHorizIcon />\n          </IconButton>\n        }\n        menuClassName=\"my-menu\"\n        transition\n      >\n        <MenuItem value=\"Edit\" onClick={handleEditOption}>\n          Edit\n        </MenuItem>\n        <MenuItem value=\"More-details\">More Details</MenuItem>\n      </Menu>\n    </ListItem>\n  );\n}\n","export default [\n  {\n    IdCompany: 1,\n    CompanyName: \"Google\",\n  },\n  {\n    IdCompany: 2,\n    CompanyName: \"Facebook\",\n  },\n  {\n    IdCompany: 3,\n    CompanyName: \"Water Cop\",\n  },\n  {\n    IdCompany: 4,\n    CompanyName: \"Rio Tinto\",\n  },\n];\n","export default [\n  {\n    id: 1,\n    roleName: \"Engineer\",\n  },\n  {\n    id: 2,\n    roleName: \"Soft Dev\",\n  },\n];\n","export default [\n  {\n    id: 1,\n    firstName: \"John\",\n    lastName: \"Madden\",\n    emailAdd: \"cde@gmail.com\",\n    phoneNum: \"+610424203587\",\n    company: { value: \"meta\", label: \"meta\" },\n  },\n  {\n    id: 2,\n    firstName: \"Michael\",\n    lastName: \"Tran\",\n    emailAdd: \"abc@gmail.com\",\n    phoneNum: \"+610424203584\",\n    company: { value: \"water cop\", label: \"water cop\" },\n  },\n];\n","export default [\n  {\n    key: 1,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-12-30 17:30:00\",\n    enddate: \"30-12-2022\",\n    id: 47,\n    managername: \"Josep Maria Net\",\n    projectdesc: \"I4.0 - InfluxDB\",\n    projectid: \"0306\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"0306-I4.0 - InfluxDB\",\n  },\n  {\n    key: 2,\n    bgColor: \"#ffa700\",\n    comments: \"\",\n    empid: \"229\",\n    empname: \"Srirengarajan Kamarajan\",\n    end: \"2022-10-22 17:30:00\",\n    enddate: \"22-10-2022\",\n    id: 55,\n    managername: \"Srirengarajan Kamarajan\",\n    projectdesc: \"Western Controls - Water Corporation : Royal St SPS\",\n    projectid: \"4130\",\n    resourceId: \"229\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Project Management\",\n    taskid: \"PM\",\n    title: \"4130-Western Controls - Water Corporation : Royal St SPS\",\n  },\n  {\n    key: 3,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"224\",\n    empname: \"Peter Ling\",\n    end: \"2022-08-19 17:30:00\",\n    enddate: \"19-08-2022\",\n    id: 35,\n    managername: \"Sonia Barea Castillo\",\n    projectdesc: \"Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\n    projectid: \"4123\",\n    resourceId: \"224\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"4123-Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\n  },\n  {\n    key: 4,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-09-02 17:30:00\",\n    enddate: \"02-09-2022\",\n    id: 49,\n    managername: \"Josep Maria Net\",\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\n    projectid: \"3153\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"3153-Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\n  },\n  {\n    key: 5,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-08-12 17:30:00\",\n    enddate: \"12-08-2022\",\n    id: 48,\n    managername: \"Josep Maria Net\",\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\n    projectid: \"3146\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"3146-Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\n  },\n];\n","import React, { useState } from \"react\";\n\nconst useHandleCheckBox = () => {\n  const [checked, setChecked] = useState([]);\n  const handleCheck = (value) => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    console.log(newChecked);\n    setChecked(newChecked);\n  };\n\n  return { checked, setChecked, handleCheck };\n};\nexport default useHandleCheckBox;\n","export default [\n  {\n    key: 1,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-12-30 17:30:00\",\n    endDate: \"2022-12-30\",\n    id: 47,\n    managername: \"Josep Maria Net\",\n    projectDescription: \"I4.0 - InfluxDB\",\n    projectNum: \"0306\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startDate: \"2022-07-01\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    projectName: \"0306-I4.0 - InfluxDB\",\n    isFavourite: true,\n    memberCount: 5,\n  },\n  /*{\n    key: 2,\n    bgColor: \"#ffa700\",\n    comments: \"\",\n    empid: \"229\",\n    empname: \"Srirengarajan Kamarajan\",\n    end: \"2022-10-22 17:30:00\",\n    enddate: \"22-10-2022\",\n    id: 55,\n    managername: \"Srirengarajan Kamarajan\",\n    projectdesc: \"Western Controls - Water Corporation : Royal St SPS\",\n    projectid: \"4130\",\n    resourceId: \"229\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Project Management\",\n    taskid: \"PM\",\n    title: \"4130-Western Controls - Water Corporation : Royal St SPS\",\n  },\n  {\n    key: 3,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"224\",\n    empname: \"Peter Ling\",\n    end: \"2022-08-19 17:30:00\",\n    enddate: \"19-08-2022\",\n    id: 35,\n    managername: \"Sonia Barea Castillo\",\n    projectdesc: \"Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\n    projectid: \"4123\",\n    resourceId: \"224\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"4123-Western Controls - Water Corporation : Manjimup WWTP Upgrade\",\n  },\n  {\n    key: 4,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-09-02 17:30:00\",\n    enddate: \"02-09-2022\",\n    id: 49,\n    managername: \"Josep Maria Net\",\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\n    projectid: \"3153\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"3153-Spin Malaysia - Showa Denko Carbon : Cycle Time e-Form\",\n  },\n  {\n    key: 5,\n    bgColor: \"#0057e7\",\n    comments: \"\",\n    empid: \"46219\",\n    empname: \"Vishnu Vijayakumar\",\n    end: \"2022-08-12 17:30:00\",\n    enddate: \"12-08-2022\",\n    id: 48,\n    managername: \"Josep Maria Net\",\n    projectdesc: \"Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\n    projectid: \"3146\",\n    resourceId: \"46219\",\n    start: \"2022-07-01 08:30:00\",\n    startdate: \"01-07-2022\",\n    taskdesc: \"Engineering\",\n    taskid: \"ENG\",\n    title: \"3146-Spin Malaysia - Showa Denko Carbon : Import Metron DATA\",\n  },*/\n];\n","import React, {\n  createContext,\n  useContext,\n  useParams,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport CompanyList from \"../Pages/CompanyList\";\nimport RolesList from \"../Pages/RolesList\";\nimport { useLocation } from \"react-router-dom\";\nimport PersonsList from \"../Pages/PersonsList\";\nimport taskDetails from \"../tasks/taskDetails\";\nimport useHandleCheckBox from \"../CustomHooks/useHandleCheckBox\";\nimport ProjectData from \"../card/cardList\";\n\nexport const CentralDataContext = createContext();\n\nconst CentralDataProvider = (props) => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(\"\");\n  const [displayCheck, setDisplayCheck] = useState(\"none\");\n  const [delActive, setDelActive] = useState(false);\n  const [action, setAction] = useState(\"Add\");\n  const [favouriteList, setFavouristeList] = useState([]);\n  const { checked, setChecked, handleCheck } = useHandleCheckBox();\n  const { pathname } = useLocation();\n  const [team, setTeam] = useState([]);\n\n  const isRender = useRef(true);\n  useEffect(() => {\n    console.log(\"URL params:\", pathname.split(\"/\")[1]);\n    let pageName =\n      pathname.split(\"/\")[1][0].toUpperCase() + pathname.split(\"/\")[1].slice(1);\n    let dataToLoad =\n      pageName.toLocaleLowerCase() === \"company\"\n        ? CompanyList\n        : pageName.toLocaleLowerCase() === \"roles\"\n        ? RolesList\n        : pageName.toLocaleLowerCase() === \"task\"\n        ? taskDetails\n        : pageName.toLocaleLowerCase() === \"project\"\n        ? ProjectData\n        : pageName.toLocaleLowerCase() === \"team\"\n        ? team\n        : PersonsList;\n\n    if (\n      (pageName.toLocaleLowerCase() === \"project\" ||\n        pageName.toLocaleLowerCase() === \"team\") &&\n      ProjectData.length !== 0\n    ) {\n      ProjectData.forEach((proj) => {\n        console.log(\"in here\");\n        createTeam(proj.projectNum);\n      });\n    } else {\n      setTeam([]);\n      //setData(dataToLoad);\n    }\n    setData(dataToLoad);\n    setPage(pageName);\n    //console.log(\"in central context\");\n  }, [pathname]);\n\n  console.log(\"teams:\", team);\n\n  const createTeam = (projectNum) => {\n    let newTeam = {\n      id: Math.floor(Math.random() * 100),\n      projectId: projectNum,\n      teamName: `team ${projectNum}`,\n      teamDescription: \"initial team\",\n      members: [\n        {\n          memberName: \"john\",\n          role: \"\",\n        },\n        {\n          memberName: \"mary\",\n          role: \"\",\n        },\n        /* {\n          memberName: \"axel\",\n          role: \"\",\n        },\n        {\n          memberName: \"steven\",\n          role: \"\",\n        },\n        {\n          memberName: \"vicky\",\n          role: \"\",\n        },*/\n      ],\n    };\n    setTeam((prev) => [...prev, newTeam]);\n  };\n\n  const handleFavProj = (id) => {\n    let proj = data.find((proj) => proj.projectNum === id);\n    setFavouristeList((prev) => [...prev, proj]);\n  };\n\n  const handleDel = () => {\n    if (!delActive) {\n      setDisplayCheck(\"flex\");\n      setDelActive(true);\n    } else {\n      if (checked.length > 0) {\n        console.log(\"handledel:\", page);\n        checked.forEach((check) => {\n          if (page.toLocaleLowerCase() === \"company\") {\n            setData((data) =>\n              data.filter((d) => {\n                return d.IdCompany !== check;\n              })\n            );\n          } else if (page.toLocaleLowerCase() === \"roles\") {\n            setData((data) =>\n              data.filter((d) => {\n                return d.id !== check;\n              })\n            );\n          } else if (page.toLocaleLowerCase() === \"person\") {\n            setData((data) =>\n              data.filter((d) => {\n                return d.id !== check;\n              })\n            );\n          }\n        });\n\n        setDisplayCheck(\"none\");\n        setDelActive((prev) => !prev);\n        setChecked([]);\n      } else {\n        setDisplayCheck(\"none\");\n        setDelActive((prev) => !prev);\n      }\n    }\n  };\n\n  const handleAdd = (event, value) => {\n    console.log(\"adding\");\n    switch (page.toLocaleLowerCase()) {\n      case \"company\":\n        if (\n          data.find(\n            (d) =>\n              d.CompanyName.toLocaleLowerCase() === value.toLocaleLowerCase()\n          ) === undefined\n        ) {\n          setData((prev) => [\n            ...prev,\n            {\n              IdCompany: Math.floor(Math.random() * 100),\n              CompanyName: value\n                .toLowerCase()\n                .split(\" \")\n                .map((word) => {\n                  return word.charAt(0).toUpperCase() + word.slice(1);\n                })\n                .join(\" \"),\n            },\n          ]);\n        } else {\n          alert(\"company already exist\");\n          event.preventDefault();\n        }\n        break;\n      case \"roles\":\n        if (\n          data.find(\n            (d) => d.roleName.toLocaleLowerCase() === value.toLocaleLowerCase()\n          ) === undefined\n        ) {\n          setData((prev) => [\n            ...prev,\n            {\n              id: Math.floor(Math.random() * 100),\n              roleName: value\n                .toLowerCase()\n                .split(\" \")\n                .map((word) => {\n                  return word.charAt(0).toUpperCase() + word.slice(1);\n                })\n                .join(\" \"),\n            },\n          ]);\n        } else {\n          alert(\"roles already exist\");\n          event.preventDefault();\n        }\n        break;\n\n      case \"person\":\n        if (\n          data.find(\n            (d) =>\n              d.firstName.toLocaleLowerCase() ===\n              value.firstName.toLocaleLowerCase()\n          ) === undefined\n        ) {\n          setData((prev) => [\n            ...prev,\n            { ...value, id: Math.floor(Math.random() * 100) },\n          ]);\n        } else {\n          alert(\"roles already exist\");\n          event.preventDefault();\n        }\n        break;\n    }\n  };\n\n  const handleEdit = (id, value) => {\n    console.log(\"before edit\", data);\n\n    if (page.toLocaleLowerCase() === \"company\") {\n      setData((prev) =>\n        prev.map((obj) =>\n          obj.IdCompany === id ? { ...obj, CompanyName: value } : obj\n        )\n      );\n    } else if (page.toLocaleLowerCase() === \"roles\") {\n      setData((prev) =>\n        prev.map((obj) => (obj.id === id ? { ...obj, roleName: value } : obj))\n      );\n    } else {\n      setData((prev) => {\n        let index = prev.findIndex((p) => p.id === id);\n        prev[index] = value;\n        return prev;\n      });\n    }\n  };\n\n  return (\n    <CentralDataContext.Provider\n      value={{\n        data,\n        displayCheck,\n        checked,\n        handleCheck,\n        handleDel,\n        handleAdd,\n        handleEdit,\n        setData,\n        page,\n        team,\n        action,\n        setAction,\n        handleFavProj,\n      }}\n    >\n      {props.children}\n    </CentralDataContext.Provider>\n  );\n};\nexport default CentralDataProvider;\n","import { IconButton } from \"@mui/material\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport \"../Pages/headerbar.css\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\n\nconst useStyles = makeStyles({\n  buttonicon: { alignSelf: \"center\", color: \"black\" },\n});\n\nexport default function Header({ handleShow }) {\n  const classes = useStyles();\n  const { handleDel } = useContext(CentralDataContext);\n  const { pathname } = useLocation();\n  const { id } = useParams();\n\n  let isTaskPage = pathname.split(\"/\").includes(\"task\");\n  let isLogPage = pathname.split(\"/\").includes(\"log\");\n\n  let title =\n    isTaskPage && id !== undefined\n      ? `Project ${id}`\n      : isLogPage && id !== undefined\n      ? `Task ${id}`\n      : pathname.split(\"/\")[1][0].toUpperCase() +\n        pathname.split(\"/\")[1].slice(1);\n\n  let style =\n    title === \"Project\"\n      ? {\n          fontSize: \"20px\",\n          margin: \"auto\",\n        }\n      : {\n          fontSize: \"20px\",\n          textAlign: \"center\",\n          width: isTaskPage ? \"82%\" : \"60.5%\",\n        };\n\n  let display = title === \"Task\" || isLogPage || isTaskPage ? \"none\" : \"flex\";\n\n  console.log(\"display:\", title, display);\n\n  return (\n    <div className=\"header-container\">\n      <div style={style}>Hello {title}</div>\n      {title !== \"Project\" && (\n        <div className=\"icons-container\">\n          <IconButton onClick={handleShow} size=\"small\" aria-label=\"add\">\n            <AddIcon className={classes.buttonicon} />\n          </IconButton>\n          <IconButton\n            sx={{ display: { display } }}\n            onClick={handleDel}\n            size=\"small\"\n            aria-label=\"delete\"\n          >\n            <DeleteIcon className={classes.buttonicon} />\n          </IconButton>\n        </div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport List from \"@mui/material/List\";\nimport Divider from \"@mui/material/Divider\";\nimport LogItem from \"./LogItem\";\nimport { useParams } from \"react-router-dom\";\nimport IconButton from \"@mui/material/IconButton\";\nimport \"./tasklog.css\";\nimport { useState } from \"react\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport InputFormModal from \"../modal/inputFormModal\";\nimport LogForm from \"../inputform/logform\";\nimport Header from \"../Header/Header\";\n\nexport default function LogList({ logs }) {\n  const { id } = useParams();\n  const [open, setOpen] = useState(false);\n  const [display, setDisplay] = useState(\"none\");\n  const [checked, setChecked] = React.useState([]);\n  const [edit, setEdit] = useState(false);\n  const [log, setLogs] = useState([]);\n  const [logValue, setLogValue] = React.useState({});\n\n  const handleChange = (label, value) => {\n    console.log(label, value);\n    setLogValue((prevState) => ({\n      ...prevState,\n      username: \"Vishnu\",\n      key: log.length,\n      [label]: value,\n    }));\n  };\n\n  const handleAddLog = () => {\n    setLogs([...log, logValue]);\n    setOpen(false);\n  };\n\n  const handleEditSelected = () => {\n    setOpen(true);\n    setEdit(true);\n  };\n\n  const handleToggle = (value) => () => {\n    console.log(\"heyy:\", value);\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    if (newChecked.length > 0) {\n      setDisplay(\"flex\");\n    } else {\n      setDisplay(\"none\");\n    }\n    console.log(newChecked);\n    setChecked(newChecked);\n  };\n\n  const handleDelete = () => {\n    console.log(\"deleting...\");\n\n    checked.forEach((check) => {\n      setLogs((previosLogs) =>\n        previosLogs.filter((log) => {\n          console.log(\"log:\", log.key);\n          console.log(\"check:\", check);\n          return log.key !== check;\n        })\n      );\n    });\n\n    setDisplay(\"none\");\n    setChecked([]);\n  };\n\n  const onClick = () => {\n    setOpen(true);\n  };\n\n  const handleClosing = () => {\n    setOpen(false);\n    setEdit(false);\n  };\n\n  return (\n    <div>\n      <div className=\"project-bar\">\n        Task Title {id}\n        <div className=\"icons\">\n          <IconButton\n            onClick={onClick}\n            className=\"delete-button\"\n            size=\"small\"\n            aria-label=\"add\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            sx={{ display: { display } }}\n            className=\"delete-button\"\n            size=\"small\"\n            aria-label=\"delete\"\n            onClick={handleDelete}\n          >\n            <DeleteIcon sx={{ alignSelf: \"center\" }} />\n          </IconButton>\n        </div>\n      </div>\n      {/*<Header handleShow={onClick} />*/}\n      <List sx={{ width: \"100%\", bgcolor: \"background.paper\", padding: \"0px\" }}>\n        {log.map((log) => {\n          const labelId = `checkbox-list-label-${log.key}`;\n          return (\n            <div>\n              <LogItem\n                handleChecked={handleToggle}\n                key={log.key}\n                log={log}\n                labelid={labelId}\n                checked={checked}\n                handleEditOption={handleEditSelected}\n              ></LogItem>\n              <Divider\n                variant=\"inset\"\n                sx={{ borderColor: \"white\", borderBottomWidth: \"medium\" }}\n                component=\"li\"\n              />\n            </div>\n          );\n        })}\n      </List>\n\n      <InputFormModal\n        formType={\n          <LogForm\n            handleChange={handleChange}\n            logValue={logValue}\n            initialState={{}}\n          ></LogForm>\n        }\n        open={open}\n        closing={handleClosing}\n        edit={edit}\n        handleAdd={handleAddLog}\n      ></InputFormModal>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./cardItem.css\";\nimport Card from \"react-bootstrap/Card\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport useContext from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport StarOutlinedIcon from \"@mui/icons-material/StarOutlined\";\n\nexport default function ProjectCard({\n  projectInfo,\n  onClick,\n  id,\n  handleShowEdit,\n  handleDel,\n  handleFav,\n}) {\n  const [isFavourite, setIsFavourite] = useState(false);\n\n  const handleFavouriteProj = (id) => {\n    setIsFavourite((prev) => !prev);\n    handleFav(id);\n  };\n\n  let star = isFavourite ? <StarOutlinedIcon /> : <StarBorderOutlinedIcon />;\n  return (\n    <div>\n      <Card\n        style={{\n          maxHeight: \"250px\",\n          cursor: \"pointer\",\n          border: \"none\",\n          borderRadius: \"15px\",\n        }}\n        className=\"card-temp\"\n      >\n        <Card.Body className=\"card-body-temp\">\n          <Card.Title className=\"title\">\n            {projectInfo.projectName}\n            {/* <div className=\"icons-container-project\">\n              <IconButton\n                onClick={() => handleShowEdit(id)}\n                size=\"small\"\n                aria-label=\"add\"\n              >\n                <EditIcon />\n              </IconButton>\n              <IconButton\n                onClick={() => handleDel(id)}\n                size=\"small\"\n                aria-label=\"delete\"\n              >\n                <DeleteIcon />\n              </IconButton>\n              <IconButton onClick={() => handleFavouriteProj(id)} size=\"small\">\n                {star}\n              </IconButton>\n      </div>*/}\n          </Card.Title>\n          <div className=\"card-main-container\" onClick={() => onClick(id)}>\n            <Card.Subtitle className=\"mb-3 mt-3\">\n              {projectInfo.projectNum}\n            </Card.Subtitle>\n            <div className=\"description\">{projectInfo.projectDescription}</div>\n            <div className=\"dates-container\">\n              <Card.Text className=\"links\">\n                Start Date:{\" \"}\n                <span className=\"date\">{projectInfo.startDate}</span>\n              </Card.Text>\n              <Card.Text className=\"links\">\n                End Date: <span className=\"date\">{projectInfo.endDate}</span>\n              </Card.Text>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { CentralDataContext } from \"./CentralDataContext\";\n\nexport const ProjectContext = createContext();\n\nconst ProjectProvider = (props) => {\n  const { data, setData } = useContext(CentralDataContext);\n\n  const handleAddProject = (event, value) => {\n    if (!data.find((proj) => proj.projectid === value.projectNum)) {\n      setData((prev) => [\n        ...prev,\n        {\n          ...value,\n          id: Math.floor(Math.random() * 100),\n          key: Math.floor(Math.random() * 100),\n        },\n      ]);\n    } else {\n      alert(\"project already exist\");\n      event.preventDefault();\n    }\n  };\n\n  const handleEditProject = (id, value) => {\n    console.log(\"editing\", id, value);\n    setData((prev) => {\n      let index = prev.findIndex((p) => p.projectNum === id);\n      prev[index] = value;\n      return prev;\n    });\n  };\n\n  const handleDelProject = (id) => {\n    console.log(\"deleting\", id);\n    let project = data.filter((proj) => proj.projectNum !== id);\n    setData(project);\n  };\n  return (\n    <ProjectContext.Provider\n      value={{ handleAddProject, handleDelProject, handleEditProject }}\n    >\n      {props.children}\n    </ProjectContext.Provider>\n  );\n};\nexport default ProjectProvider;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"@mui/material\";\nimport \"./inputFormModal.css\";\nimport { Form } from \"react-bootstrap\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport { ProjectContext } from \"../Context/ProjectContext\";\n\nconst ProjectModal = ({ show, handleClose, Id }) => {\n  const [formData, setFormData] = useState({\n    projectNum: \"\",\n    projectName: \"\",\n    projectDescription: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    //memberCount: \"\",\n  });\n\n  const { action, data } = useContext(CentralDataContext);\n  const { handleAddProject, handleEditProject } = useContext(ProjectContext);\n\n  const handleChange = (event) => {\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const handleSubmit = (event) => {\n    handleAddProject(event, formData);\n    event.preventDefault();\n    handleClosing();\n    console.log(\"Submit\");\n  };\n\n  const handleClosing = () => {\n    setFormData({\n      projectNum: \"\",\n      projectName: \"\",\n      projectDescription: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      // memberCount: \"\",\n    });\n    handleClose();\n    console.log(\"Closing\");\n  };\n\n  const handleEditName = (id, value) => {\n    handleEditProject(id, value);\n    console.log(\"editing\");\n    handleClosing();\n  };\n\n  console.log(\"FORM DATA:\", Id, formData);\n  /*const formatdate = (value) => {\n    let temp = value.split(\"-\");\n\n    return temp[2] + \"-\" + temp[1] + \"-\" + temp[0];\n  };*/\n  useEffect(() => {\n    if (Id !== null) {\n      console.log(\"in\");\n      let project = data.find((d) => d.projectNum === Id);\n      console.log(\"found:\", project);\n      const {\n        projectNum,\n        projectName,\n        projectDescription,\n        startDate,\n        endDate,\n      } = project;\n      console.log({\n        projectNum,\n        projectName,\n        projectDescription,\n      });\n      setFormData({\n        projectNum,\n        projectName,\n        projectDescription,\n        startDate,\n        endDate,\n      });\n    }\n  }, [Id]);\n  return (\n    <>\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Project</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Project Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"projectNum\"\n                onChange={handleChange}\n                placeholder=\"Project Number ....\"\n                value={formData.projectNum}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"projectName\"\n                onChange={handleChange}\n                placeholder=\"Project Name ...\"\n                value={formData.projectName}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"projectDescription\"\n                onChange={handleChange}\n                placeholder=\"Project Description...\"\n                value={formData.projectDescription}\n              />\n            </Form.Group>\n            {/* <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Number of Team Members</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"memberCount\"\n                onChange={handleChange}\n                placeholder=\"number of member\"\n                value={formData.memberCount}\n              />\n  </Form.Group>*/}\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"startDate\"\n                onChange={handleChange}\n                value={formData.startDate}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"endDate\"\n                onChange={handleChange}\n                value={formData.endDate}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClosing}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={\n              Id === null ? handleSubmit : () => handleEditName(Id, formData)\n            }\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default ProjectModal;\n","import React, { useState } from \"react\";\n\nconst useCommonState = (setAction) => {\n  const [show, setShow] = useState(false);\n  const [id, setId] = useState(null);\n\n  const handleClose = () => {\n    setAction(\"Add\");\n    setId(null);\n    setShow(false);\n  };\n\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleShowEdit = (id) => {\n    console.log(\"id:\", id);\n    setId(id);\n    setShow(true);\n    setAction(\"Edit\");\n  };\n\n  return { show, id, handleClose, handleShow, handleShowEdit };\n};\nexport default useCommonState;\n","import React, { useState, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ProjectCard from \"../card/cardItem\";\nimport ProjectData from \"../card/cardList\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\nimport ProjectModal from \"../modal/ProjectModal\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport useCommonState from \"../CustomHooks/useCommonState\";\nimport { ProjectContext } from \"../Context/ProjectContext\";\n\nconst useStyles = makeStyles({\n  gridContainer: {},\n  gridItem: {\n    padding: \"25px\",\n    height: \"100p%\",\n  },\n});\n\nexport default function Project() {\n  const { setAction, data, handleFavProj } = useContext(CentralDataContext);\n  const { show, id, handleClose, handleShow, handleShowEdit } = useCommonState(\n    setAction\n  );\n  const { handleDelProject } = useContext(ProjectContext);\n  console.log(\"projects\", data);\n  const classes = useStyles();\n\n  const navigate = useNavigate();\n\n  const onClick = (id) => {\n    console.log(id);\n    navigate(\"/task/\" + id);\n  };\n\n  let projectitems = data.map((proj) => {\n    return (\n      <Grid item className={classes.gridItem} xs={12} s={8} md={6} lg={4}>\n        <ProjectCard\n          key={proj.key}\n          projectInfo={proj}\n          onClick={onClick}\n          id={proj.projectNum}\n          handleShowEdit={handleShowEdit}\n          handleDel={handleDelProject}\n          handleFav={handleFavProj}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <div>\n      <Header handleShow={handleShow} name={\"Projects\"} />\n      <Grid container className={classes.gridContainer}>\n        {projectitems}\n      </Grid>\n      <ProjectModal Id={id} show={show} handleClose={handleClose} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TasksList from \"./taskDetails.js\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./taskCard.css\";\nimport AvatarGroup from \"react-avatar-group\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Menu, MenuItem, MenuButton } from \"@szhsin/react-menu\";\nimport \"@szhsin/react-menu/dist/index.css\";\nimport \"@szhsin/react-menu/dist/transitions/slide.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BsThreeDotsVertical, BsFillCalendarCheckFill } from \"react-icons/bs\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport StarOutlinedIcon from \"@mui/icons-material/StarOutlined\";\nimport { IconButton } from \"@mui/material\";\n\nexport default function TaskCard({\n  onClick,\n  taskid,\n  tasksInfo,\n  handleShowEdit,\n  handleFav,\n}) {\n  const [status, setStatus] = useState(\"Completed\");\n\n  let style = status === \"on-site\" ? \"rgb(216, 167, 52)\" : \"green\";\n  const handleDelete = (id) => {\n    console.log(\"deleting\", id);\n  };\n  const [isFavourite, setIsFavourite] = useState(false);\n\n  const handleFavouriteProj = (id) => {\n    setIsFavourite((prev) => !prev);\n    handleFav(id);\n  };\n\n  let star = isFavourite ? (\n    <StarOutlinedIcon sx={{ color: \"#ffaa00\" }} />\n  ) : (\n    <StarBorderOutlinedIcon />\n  );\n\n  return (\n    <Card className=\"task-card\" key={tasksInfo.key}>\n      <Card.Header className=\"card-header-modif\">\n        <h5 className=\"title\">{tasksInfo.taskid}</h5>\n        <div className=\"header-icon\">\n          <Menu\n            menuButton={\n              <MenuButton\n                style={{ backgroundColor: style }}\n                className=\"status-button\"\n              >\n                {status}\n              </MenuButton>\n            }\n            onItemClick={(e) => setStatus(e.value)}\n            transition\n          >\n            <MenuItem value=\"on-site\">On site</MenuItem>\n            <MenuItem value=\"In-progress\">In-progress</MenuItem>\n            <MenuItem value=\"pending\">Pending</MenuItem>\n          </Menu>\n          <IconButton onClick={() => handleFavouriteProj(taskid)} size=\"small\">\n            {star}\n          </IconButton>\n          <Menu\n            menuButton={\n              <MenuButton className=\"more-button\">\n                <BsThreeDotsVertical size=\"1.2rem\"></BsThreeDotsVertical>\n              </MenuButton>\n            }\n            onItemClick={(e) => {\n              if (e.value === \"edit\") {\n                handleShowEdit(taskid);\n              } else {\n                handleDelete(taskid);\n              }\n            }}\n            transition\n          >\n            <MenuItem value=\"edit\">\n              <EditIcon sx={{ marginRight: \"5px\" }} />\n              Edit\n            </MenuItem>\n            <MenuItem value=\"delete\">\n              <DeleteIcon sx={{ marginRight: \"5px\" }} />\n              Delete\n            </MenuItem>\n          </Menu>\n        </div>\n      </Card.Header>\n      <Card.Body\n        style={{\n          cursor: \"pointer\",\n        }}\n        className=\"card-background\"\n        onClick={() => onClick(taskid)}\n      >\n        <Card.Text>{tasksInfo.title}</Card.Text>\n        <Card.Text>{tasksInfo.taskdesc}</Card.Text>\n      </Card.Body>\n      <Card.Footer className=\"footer-container card-background\">\n        <div className=\"dates-container-2\">\n          <BsFillCalendarCheckFill size=\"1.0rem\"></BsFillCalendarCheckFill>\n          <div className=\"dates\">\n            {tasksInfo.startdate.split(\"-\").join(\"/\")} -{\" \"}\n            {tasksInfo.enddate.split(\"-\").join(\"/\")}\n          </div>\n        </div>\n        <AvatarGroup\n          avatars={[\"James Wang\"]}\n          initialCharacters={2}\n          max={2}\n          size={30}\n          displayAllOnHover\n          shadow={2}\n        />\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"@mui/material\";\nimport \"./inputFormModal.css\";\nimport { Form } from \"react-bootstrap\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport Select from \"react-select\";\n\nconst TasksModal = ({ show, handleClose, Id }) => {\n  const [formData, setFormData] = useState({\n    taskName: \"\",\n    taskDescription: \"\",\n    requestedBy: \"\",\n    assignedTo: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    status: \"\",\n  });\n\n  const { data, action } = useContext(CentralDataContext);\n\n  const handleChange = (event) => {\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const handleSelectChange = (value, action) => {\n    setFormData((prev) => ({\n      ...prev,\n      [action]: value,\n    }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submit\");\n  };\n\n  const handleClosing = () => {\n    handleClose();\n    console.log(\"Closing\");\n  };\n\n  const handleEditName = (id, name) => {\n    console.log(\"editing\");\n    handleClosing();\n  };\n\n  useEffect(() => {\n    if (Id !== null) {\n      console.log(\"in\");\n      let task = data.find((d) => d.projectid === Id);\n      console.log(\"tasks\", task);\n      const { taskdesc } = task;\n      setFormData((prev) => ({ ...prev, taskDescription: taskdesc }));\n    }\n  }, [Id]);\n\n  console.log(\"FORM DATA:\", Id, formData);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Task</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Task Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"taskName\"\n                onChange={handleChange}\n                placeholder=\"task name ....\"\n                value={formData.taskName}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"taskDescription\"\n                onChange={handleChange}\n                placeholder=\"task Description...\"\n                value={formData.taskDescription}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Requested By</Form.Label>\n              <Select\n                name=\"requestedBy\"\n                placeholder={\"Select members\"}\n                value={formData.requestedBy}\n                onChange={(entry) => handleSelectChange(entry, \"requestedBy\")}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Assigned To</Form.Label>\n              <Select\n                name=\"assignedTo\"\n                placeholder={\"Select members\"}\n                value={formData.assignedTo}\n                onChange={(entry) => handleSelectChange(entry, \"assignedTo\")}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"startDate\"\n                onChange={handleChange}\n                value={formData.startDate}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"endDate\"\n                onChange={handleChange}\n                value={formData.endDate}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>status</Form.Label>\n              <Select\n                name=\"status\"\n                placeholder={\"Select status\"}\n                value={formData.status}\n                onChange={(entry) => handleSelectChange(entry, \"status\")}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClosing}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={\n              Id === null ? handleSubmit : () => handleEditName(Id, \"editing\")\n            }\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default TasksModal;\n","import React, { useState, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TasksList from \"./taskDetails.js\";\nimport \"./taskCard.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"@szhsin/react-menu/dist/index.css\";\nimport \"@szhsin/react-menu/dist/transitions/slide.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport TaskCard from \"./taskCard.js\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport { BsSearch, BsPlus } from \"react-icons/bs\";\nimport { green } from \"@material-ui/core/colors\";\nimport Header from \"../Header/Header.js\";\nimport TasksModal from \"../modal/TasksModal.js\";\nimport useCommonState from \"../CustomHooks/useCommonState\";\n\nexport default function Task() {\n  const { id } = useParams();\n  const { setAction, handleFavProj } = useContext(CentralDataContext);\n  const {\n    show,\n    id: Id,\n    handleClose,\n    handleShow,\n    handleShowEdit,\n  } = useCommonState(setAction);\n\n  const navigate = useNavigate();\n\n  const onClick = (id) => {\n    console.log(id);\n    navigate(\"/log/\" + id);\n  };\n\n  let temp;\n  let matches = TasksList.filter((t) => t.projectid === id);\n  let title = matches.length > 0 ? `Project ${id}` : <></>;\n  temp =\n    matches.length > 0\n      ? matches.map((t) => (\n          <Grid item xs={12} s={8} md={6} lg={4}>\n            <TaskCard\n              tasksInfo={t}\n              onClick={onClick}\n              handleFav={handleFavProj}\n              taskid={t.projectid}\n            />\n          </Grid>\n        ))\n      : (temp = TasksList.map((t) => (\n          <Grid item xs={12} s={8} md={6} lg={4}>\n            <TaskCard\n              tasksInfo={t}\n              onClick={onClick}\n              taskid={t.projectid}\n              handleShowEdit={handleShowEdit}\n              handleFav={handleFavProj}\n            />\n          </Grid>\n        )));\n\n  return (\n    <div>\n      <Header\n        handleShow={handleShow}\n        name={id === undefined ? \"Tasks\" : title}\n      />\n      <div className=\"main-container\">\n        <Grid container spacing={2} className=\"grid-container\">\n          {temp}\n        </Grid>\n      </div>\n      <TasksModal Id={Id} show={show} handleClose={handleClose} />\n    </div>\n  );\n}\n","import List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport React, { useContext } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\n\nfunction stringAvatar(name) {\n  return name.split(\" \").length > 1 && !(parseInt(name.split(\" \")[1][0]) >= 0)\n    ? { children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}` }\n    : { children: `${name.split(\" \")[0][0]}` };\n}\n\nconst ListItems = ({ handleShow }) => {\n  const { checked, handleCheck, data, displayCheck, page, team } = useContext(\n    CentralDataContext\n  );\n  console.log(\"in list items:\", team);\n  let listItems = [];\n  let Items = [];\n\n  switch (page.toLocaleLowerCase()) {\n    case \"company\":\n      console.log(\"load company\");\n      Items = data.map(({ CompanyName: name, IdCompany: id }) => ({\n        name,\n        id,\n      }));\n      break;\n    case \"roles\":\n      console.log(\"load roles\");\n      Items = data.map(({ roleName: name, id: id }) => ({\n        name,\n        id,\n      }));\n      break;\n    case \"person\":\n      Items = data.map(({ firstName: name, lastName: lname, id: id }) => ({\n        name,\n        lname,\n        id,\n      }));\n      break;\n    case \"team\":\n      Items = team.map(({ teamName: name, id: id }) => ({\n        name,\n        id,\n      }));\n      break;\n    default:\n      Items = [];\n  }\n\n  console.log(Items);\n  listItems =\n    Items.length > 0\n      ? Items.sort((a, b) => a.name.localeCompare(b.name)).map((data) => {\n          let name =\n            page.toLocaleLowerCase() === \"person\"\n              ? `${data.name} ${data.lname}`\n              : data.name;\n          return (\n            <>\n              <ListItem\n                sx={{\n                  backgroundColor: \"#e6f0ff\",\n                  alignItems: \"center\",\n                  borderRadius: 10,\n                  gap: 0,\n                }}\n                alignItems=\"flex-start\"\n              >\n                <ListItemIcon\n                  sx={{ minWidth: 0, marginTop: 0, display: displayCheck }}\n                >\n                  <Checkbox\n                    checked={checked.indexOf(data.id) !== -1}\n                    onClick={() => handleCheck(data.id)}\n                    edge=\"start\"\n                    disableRipple\n                  />\n                </ListItemIcon>\n\n                <ListItemButton sx={{ padding: 0 }}>\n                  <ListItemAvatar sx={{ marginTop: 0 }}>\n                    <Avatar\n                      sx={{\n                        bgcolor: \"#1976d2\",\n                        width: 40,\n                        height: 40,\n                        fontWeight: \"bold\",\n                        padding: \"25px\",\n                      }}\n                      {...stringAvatar(name)}\n                    />\n                  </ListItemAvatar>\n                  <ListItemText primary={name} />\n                </ListItemButton>\n                <IconButton onClick={() => handleShow(data.id)} size=\"small\">\n                  <EditIcon />\n                </IconButton>\n              </ListItem>\n              <Divider\n                sx={{ borderColor: \"white\", borderBottomWidth: \"medium\" }}\n                variant=\"inset\"\n                component=\"li\"\n              />\n            </>\n          );\n        })\n      : [];\n\n  return <>{listItems}</>;\n};\nexport default ListItems;\n","import List from \"@mui/material/List\";\nimport React from \"react\";\nimport ListItems from \"./ListItems\";\nimport CompanyList from \"./CompanyList\";\nimport CentralDataProvider from \"../Context/CentralDataContext\";\n\nconst ListContainer = ({ handleShow }) => {\n  return (\n    <>\n      <List\n        sx={{\n          width: \"100%\",\n          bgcolor: \"background.paper\",\n          padding: \"0px\",\n          marginTop: 1,\n        }}\n      >\n        <ListItems handleShow={handleShow} data={CompanyList} />\n      </List>\n    </>\n  );\n};\nexport default ListContainer;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"@mui/material\";\nimport \"./inputFormModal.css\";\nimport { Form } from \"react-bootstrap\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\n\nconst DataModal = ({ show, handleClose, Id }) => {\n  const [name, setName] = useState(\"\");\n  const { handleAdd, data, handleEdit, page, action } = useContext(\n    CentralDataContext\n  );\n\n  let pageName = page.toLocaleLowerCase();\n\n  let pageTitle =\n    pageName === \"company\"\n      ? \"Company\"\n      : pageName === \"roles\"\n      ? \"Role\"\n      : \"Person\";\n\n  let formName =\n    pageName === \"company\"\n      ? \"CompanyName\"\n      : pageName === \"roles\"\n      ? \"roleName\"\n      : \"PersonName\";\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (name === \"\") {\n      alert(\"Please enter a name\");\n    } else {\n      handleAdd(event, name);\n      handleClosing();\n    }\n  };\n\n  const handleClosing = () => {\n    handleClose();\n    setName(\"\");\n  };\n\n  const handleEditName = (id, name) => {\n    handleEdit(id, name);\n    handleClosing();\n  };\n\n  useEffect(() => {\n    if (Id !== null) {\n      console.log(\"in\");\n\n      if (pageName === \"company\") {\n        let company = data.find((d) => d.IdCompany === Id);\n        const { CompanyName } = company;\n        console.log(CompanyName);\n        setName(CompanyName);\n      } else if (pageName === \"roles\") {\n        let role = data.find((d) => d.id === Id);\n        const { roleName } = role;\n        console.log(role);\n        setName(roleName);\n      } else {\n        let person = data.find((d) => d.id === Id);\n        const { PersonName } = person;\n        console.log(person);\n        setName(PersonName);\n      }\n    }\n  }, [Id]);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            {action === \"Add\" ? \"New\" : \"Edit\"} {pageTitle}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name={formName}\n                onChange={handleChange}\n                placeholder=\"Name...\"\n                value={name}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClosing}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={\n              Id === null ? handleSubmit : () => handleEditName(Id, name)\n            }\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default DataModal;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"@mui/material\";\nimport \"./inputFormModal.css\";\nimport { Form } from \"react-bootstrap\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport Select from \"react-select\";\nimport CompanyList from \"../Pages/CompanyList\";\nimport \"react-phone-number-input/style.css\";\nimport PhoneInput from \"react-phone-number-input\";\n\nconst PersonDataModal = ({ show, handleClose, Id }) => {\n  const [formData, setFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    emailAdd: \"\",\n    phoneNum: \"\",\n    company: {\n      value: \"\",\n      label: \"\",\n    },\n  });\n  const { handleAdd, data, action, handleEdit } = useContext(\n    CentralDataContext\n  );\n\n  const handleSelectPhone = (event) => {\n    console.log(\"heyy\", event);\n    setFormData((prev) => ({\n      ...prev,\n      phoneNum: event,\n    }));\n  };\n\n  const handleSelectChange = (value, action) => {\n    setFormData((prev) => ({\n      ...prev,\n      [action]: value,\n    }));\n  };\n\n  const handleChange = (event) => {\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(\"Submit\");\n    handleAdd(event, formData);\n    handleClosing();\n  };\n\n  const handleClosing = () => {\n    handleClose();\n    setFormData({\n      firstName: \"\",\n      lastName: \"\",\n      emailAdd: \"\",\n      phoneNum: \"\",\n      company: {},\n    });\n    console.log(\"Closing\");\n  };\n\n  const handleEditName = (id, value) => {\n    handleEdit(id, value);\n    handleClosing();\n    console.log(\"editing\");\n  };\n\n  useEffect(() => {\n    if (Id !== null) {\n      console.log(\"in\");\n      let person = data.find((d) => d.id === Id);\n      const { firstName, lastName, phoneNum, emailAdd, company } = person;\n      console.log(person);\n      setFormData((prev) => ({\n        ...prev,\n        firstName,\n        lastName,\n        emailAdd,\n        phoneNum,\n        company,\n      }));\n    }\n  }, [Id]);\n\n  let companyOptions = CompanyList.map((c) => ({\n    value: c.CompanyName,\n    label: c.CompanyName,\n  }));\n\n  console.log(\"FORM DATA:\", Id, formData);\n  return (\n    <>\n      <Modal show={show} onHide={handleClosing} animation={true} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Person</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Firstname</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"firstName\"\n                onChange={handleChange}\n                placeholder=\"Name...\"\n                value={formData.firstName}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Lastname</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"lastName\"\n                onChange={handleChange}\n                placeholder=\"Name...\"\n                value={formData.lastName}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"emailAdd\"\n                onChange={handleChange}\n                placeholder=\"email...\"\n                value={formData.emailAdd}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Phone No.</Form.Label>\n              <PhoneInput\n                placeholder=\"Enter phone number\"\n                value={formData.phoneNum}\n                onChange={(e) => handleSelectPhone(e)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Company</Form.Label>\n              <Select\n                name=\"company\"\n                placeholder={\"Select Company\"}\n                options={companyOptions}\n                value={formData.company}\n                onChange={(entry) => handleSelectChange(entry, \"company\")}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClosing}>\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={\n              Id === null ? handleSubmit : () => handleEditName(Id, formData)\n            }\n          >\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default PersonDataModal;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"@mui/material\";\nimport \"./inputFormModal.css\";\nimport { Form } from \"react-bootstrap\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport { ProjectContext } from \"../Context/ProjectContext\";\nimport ProjectData from \"../card/cardList\";\nimport RolesList from \"../Pages/RolesList\";\nimport Select from \"react-select\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { IconButton } from \"@mui/material\";\n\nconst TeamModal = ({ show, handleClose, Id }) => {\n  const [formData, setFormData] = useState({\n    projectId: \"\",\n    teamName: \"\",\n    teamDescription: \"\",\n    members: [\n      {\n        memberName: \"\",\n        role: \"\",\n      },\n    ],\n  });\n  const [count, setCount] = useState(2);\n\n  const { action, data, team } = useContext(CentralDataContext);\n\n  const handleChange = (event) => {\n    setFormData((prevFormData) => {\n      return {\n        ...prevFormData,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const addMember = () => {\n    setCount((prev) => prev + 1);\n  };\n\n  const removeMember = () => {\n    setCount((prev) => prev - 1);\n  };\n\n  let roleOptions = RolesList.map((r) => ({\n    value: r.roleName,\n    label: r.roleName,\n  }));\n  /*\n  const handleSubmit = (event) => {\n    handleAddProject(event, formData);\n    event.preventDefault();\n    handleClosing();\n    console.log(\"Submit\");\n  };\n*/\n  const handleClosing = () => {\n    setFormData({\n      projectId: \"\",\n      teamName: \"\",\n      teamDescription: \"\",\n      members: [{ memberName: \"\", role: \"\" }],\n    });\n    handleClose();\n    console.log(\"Closing\");\n  };\n  /*\n  const handleEditName = (id, value) => {\n    handleEditProject(id, value);\n    console.log(\"editing\");\n    handleClosing();\n  };\n*/\n  console.log(\"FORM DATA:\", Id, formData);\n\n  useEffect(() => {\n    if (Id !== null) {\n      console.log(\"in\", team);\n      let teamSelected = team.find((t) => t.id === Id);\n      console.log(\"team to edit:\", teamSelected);\n      const { projectId, teamName, teamDescription, members } = teamSelected;\n      setFormData({ projectId, teamName, teamDescription, members });\n      let { memberCount } = ProjectData.find(\n        (proj) => proj.projectNum === projectId\n      );\n      //console.log(\"memberCount\", memberCount);\n      //setCount(memberCount);\n    }\n  }, [Id]);\n\n  const processMemberElement = (count) => {\n    let arr = [];\n\n    for (let i = 0; i < count; i++) {\n      arr[i] = (\n        <div className=\"input-group\">\n          <Form.Group className=\" member-group\">\n            {/*<Form.Control\n                className=\"member\"\n                type=\"text\"\n                name=\"memberName\"\n                onChange={handleChange}\n                placeholder=\"Name...\"\n                value={m.memberName}\n              />*/}\n            <Select\n              className=\"member\"\n              /* value={{\n                value: team[0].members[i].memberName,\n                label: team[0].members[i].memberName,\n              }}*/\n              type=\"text\"\n              name=\"memberName\"\n            />\n          </Form.Group>\n          <Form.Group className=\"role-group\">\n            <Select\n              name=\"role\"\n              options={roleOptions}\n              value={formData.members[0].role}\n            />\n          </Form.Group>\n          <IconButton onClick={() => removeMember()}>\n            <ClearIcon className=\"clear-button\" />\n          </IconButton>\n        </div>\n      );\n    }\n    console.log(\"array\", arr);\n    return arr;\n  };\n\n  let membersElement =\n    count === 1 ? (\n      <div className=\"input-group\">\n        <Form.Group className=\" member-group\">\n          {/*<Form.Control\n                className=\"member\"\n                type=\"text\"\n                name=\"memberName\"\n                onChange={handleChange}\n                placeholder=\"Name...\"\n                value={m.memberName}\n              />*/}\n          <Select\n            className=\"member\"\n            /*value={{\n              value: team[0].members[0].memberName,\n              label: team[0].members[0].memberName,\n            }}*/\n            type=\"text\"\n            name=\"memberName\"\n          />\n        </Form.Group>\n        <Form.Group className=\"role-group\">\n          <Select\n            name=\"role\"\n            options={roleOptions}\n            value={formData.members[0].role}\n          />\n        </Form.Group>\n        <IconButton onClick={() => removeMember()}>\n          <ClearIcon className=\"clear-button\" />\n        </IconButton>\n      </div>\n    ) : (\n      processMemberElement(count)\n    );\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClosing} animation={true}>\n        <Modal.Header closeButton>\n          <Modal.Title>{action === \"Add\" ? \"New\" : \"Edit\"} Team</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Project Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"projectId\"\n                onChange={handleChange}\n                placeholder=\"Project Number ....\"\n                value={formData.projectId}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Team Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"teamName\"\n                onChange={handleChange}\n                placeholder=\"Project Name ...\"\n                value={formData.teamName}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"CustomeFilterNameInput\">\n              <Form.Label>Team Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"teamDescription\"\n                onChange={handleChange}\n                placeholder=\"Project Description...\"\n                value={formData.teamDescription}\n              />\n            </Form.Group>\n          </Form>\n\n          <div>\n            <div className=\"labels-input\">\n              <span>\n                Member{\" \"}\n                <IconButton onClick={() => addMember()}>\n                  <AddIcon className=\"add-member-button\" />\n                </IconButton>\n              </span>\n\n              <span>Role</span>\n            </div>\n\n            {membersElement}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClosing}>\n            Close\n          </Button>\n          <Button variant=\"primary\">Save Changes</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\nexport default TeamModal;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport { blue, white } from \"@mui/material/colors\";\nimport { makeStyles } from \"@material-ui/core\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport \"./headerbar.css\";\nimport ListContainer from \"./ListContainer\";\nimport { CentralDataContext } from \"../Context/CentralDataContext\";\nimport DataModal from \"../modal/DataModal\";\nimport Header from \"../Header/Header\";\nimport PersonDataModal from \"../modal/PersonDataModal\";\nimport useCommonState from \"../CustomHooks/useCommonState\";\nimport TeamModal from \"../modal/TeamModal\";\n\nconst Company = () => {\n  const { page, setAction } = useContext(CentralDataContext);\n  const { show, id, handleClose, handleShow, handleShowEdit } = useCommonState(\n    setAction\n  );\n\n  console.log(\"id:\", id);\n  let Modal =\n    page === \"Company\" || page === \"Roles\" ? (\n      <DataModal Id={id} show={show} handleClose={handleClose} />\n    ) : page == \"Team\" ? (\n      <TeamModal Id={id} show={show} handleClose={handleClose} />\n    ) : (\n      <PersonDataModal Id={id} show={show} handleClose={handleClose} />\n    );\n  return (\n    <>\n      <Header handleShow={handleShow} name={page} />\n      <ListContainer handleShow={handleShowEdit} />\n      {Modal}\n    </>\n  );\n};\nexport default Company;\n","import React from \"react\";\n\nconst Recent = () => {\n  return <>Recent</>;\n};\nexport default Recent;\n","import React from \"react\";\nimport \"./Home.css\";\nimport { Button } from \"react-bootstrap\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <div className=\"wrapper\">\n        <div className=\"home-title\">Welcome To SpinTaskLogger</div>\n        <div className=\"button-container\">\n          <Button variant=\"primary\" size=\"md\">\n            Log In\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport ResponsiveAppBar from \"./components/appbar/appbar\";\nimport SimpleAccordion from \"./components/accordian/accordionList\";\nimport LogForm from \"./components/inputform/logform\";\nimport InputFormModal from \"./components/modal/inputFormModal\";\nimport BasicTable from \"./components/dataTable/DataTable\";\nimport LogList from \"./components/log/LogList\";\nimport Project from \"./components/project/project\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Task from \"./components/tasks/tasks\";\nimport TaskList from \"./components/tasks/taskCard\";\nimport Company from \"./components/Pages/Company\";\nimport CentralDataProvider from \"../src/components/Context/CentralDataContext\";\nimport ProjectProvider from \"./components/Context/ProjectContext\";\nimport Recent from \"./components/Recent/Recent\";\nimport Team from \"./components/Team/Team\";\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  let logs = [\n    {\n      key: 1,\n      username: \"Vishnu\",\n      taskid: \"20\",\n      date: \"24-08-2022\",\n      comments: \"Testing the functionality\",\n      workingTime: \"5hrs 30mins \",\n      status: \"Open\",\n    },\n    {\n      key: 2,\n      username: \"Vijay\",\n      taskid: \"21\",\n      date: \"24-08-2022\",\n      comments: \"Testing the functionality2\",\n      workingTime: \"4hrs 20mins \",\n      status: \"Open\",\n    },\n    {\n      key: 3,\n      username: \"josep\",\n      taskid: \"22\",\n      date: \"24-08-2022\",\n      comments: \"Testing the functionality3\",\n      workingTime: \"3hrs 50mins \",\n      Status: \"Open\",\n    },\n  ];\n\n  return (\n    <div>\n      <ResponsiveAppBar></ResponsiveAppBar>\n      <Routes>\n        <Route\n          path=\"/:name\"\n          element={\n            <CentralDataProvider>\n              <Company />\n            </CentralDataProvider>\n          }\n        />\n        <Route\n          path=\"/project\"\n          element={\n            <CentralDataProvider>\n              <ProjectProvider>\n                <Project />\n              </ProjectProvider>\n            </CentralDataProvider>\n          }\n        />\n        <Route\n          path=\"/task\"\n          element={\n            <CentralDataProvider>\n              <Task />\n            </CentralDataProvider>\n          }\n        />\n\n        <Route\n          path=\"/recent\"\n          element={\n            <CentralDataProvider>\n              <Recent />\n            </CentralDataProvider>\n          }\n        />\n\n        <Route\n          path=\"/team\"\n          element={\n            <CentralDataProvider>\n              <Company />\n            </CentralDataProvider>\n          }\n        />\n        <Route\n          path=\"/task/:id\"\n          element={\n            <CentralDataProvider>\n              <Task />\n            </CentralDataProvider>\n          }\n        />\n        <Route path=\"/log/:id\" element={<LogList logs={logs} />} />\n\n        <Route path=\"/\" element={<Home />} />\n        <Route\n          path=\"/logform\"\n          element={\n            <InputFormModal\n              formType={<LogForm initialState={{}}></LogForm>}\n            ></InputFormModal>\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}